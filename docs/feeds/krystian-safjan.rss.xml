<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Krystian Safjan's Blog - Krystian Safjan</title><link>https://www.safjan.com/</link><description>Data Scientist | Researcher | Team Leader&lt;br&gt;&lt;br&gt; working at Ernst &amp;amp; Young and writing about &lt;a href="/category/data-science.html"&gt;Data Science and Visualization&lt;/a&gt;, on &lt;a href="/category/data-science.html"&gt;Machine Learning, Deep Learning&lt;/a&gt; and &lt;a href="/tag/nlp/"&gt;NLP&lt;/a&gt;. There are also some  &lt;a href="/category/howto.html"&gt;howto&lt;/a&gt; posts on tools and workflows.</description><lastBuildDate>Wed, 31 Aug 2022 00:00:00 +0200</lastBuildDate><item><title>How to convert HTML to clean markdown</title><link>https://www.safjan.com/how-to-convert-html-to-clean-markdown/</link><description>&lt;p&gt;Instruction on how to convert HTML document to markdown with cleaning the output from the clutter&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 31 Aug 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-08-31:/how-to-convert-html-to-clean-markdown/</guid><category>note</category><category>markdown</category><category>pandoc</category><category>conversion</category><category>cli</category></item><item><title>List unlinked (orphaned) notes in Obsidian</title><link>https://www.safjan.com/list-unlinked-orphaned-notes-obsidian/</link><description>&lt;p&gt;Here is how you can create dynamic list of unlinked notes (files) using dataview&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;```dataview
LIST FROM &amp;quot;&amp;quot;
WHERE length(file.inlinks) = 0 AND length(file.outlinks) = 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;Credits to &lt;a href="https://forum.obsidian.md/u/riddyrayes/summary"&gt;riddyrayes&lt;/a&gt; for the solution posted on obsidian forum &lt;a href="https://forum.obsidian.md/t/find-orphan-notes/817/15"&gt;Find orphan notes - Feature archive …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 17 Aug 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-08-17:/list-unlinked-orphaned-notes-obsidian/</guid><category>note</category><category>obsidian</category><category>dataview</category><category>orphaned-notes</category></item><item><title>Reading CSV with Obsidian dataview and dataviewjs</title><link>https://www.safjan.com/reading-csv-with-obsidian-dataview-dataviewjs/</link><description>&lt;p&gt;The &lt;a href="https://github.com/blacksmithgu/obsidian-dataview"&gt;obsidian-dataview&lt;/a&gt; plugin allows reading data from the notes in the vault and data files such as CSV. Both &lt;code&gt;dataview&lt;/code&gt; and &lt;code&gt;dataviewjs&lt;/code&gt; can be used for that purpose. I'm more fluent in using &lt;code&gt;dataview&lt;/code&gt; therefore I will dedicate more space to this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 16 Aug 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-08-16:/reading-csv-with-obsidian-dataview-dataviewjs/</guid><category>note</category><category>obsidian</category><category>dataview</category><category>dataviewjs</category><category>csv</category></item><item><title>Install Photoprism on QNAP NAS using Docker Compose</title><link>https://www.safjan.com/install-photoprism-on-qnap-nas-using-docker-compose/</link><description>&lt;p&gt;Instruction on how to install Photoprism on QNAP NAS using Docker Compose&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 08 Aug 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-08-08:/install-photoprism-on-qnap-nas-using-docker-compose/</guid><category>note</category><category>nas</category><category>photoprism</category><category>linux</category><category>photo-gallery</category><category>docker</category><category>docker-compose</category><category>qnap</category></item><item><title>Trading algorithms and trading strategies</title><link>https://www.safjan.com/trading-algorithms/</link><description>&lt;p&gt;This note contains a collection of trading algorithms or links to algorithms&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 27 Jun 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-06-27:/trading-algorithms/</guid><category>note</category><category>finance/algotrading</category><category>finance/crypto</category><category>algorithm</category><category>trading</category><category>strategies</category><category>finance</category></item><item><title>Lesser Known Backtesting Libraries</title><link>https://www.safjan.com/lesser-known-backtesting-libraries/</link><description>&lt;p&gt;This article presents set of lesser-known but interesing libraries that can be used for backtesting trading strategies and trading algortithms in general.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sun, 05 Jun 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-06-05:/lesser-known-backtesting-libraries/</guid><category>Algorithmic Trading</category><category>trading</category><category>backtesting</category><category>crypto</category><category>algorythmic-trading</category><category>algotrading</category><category>quant</category></item><item><title>Append JSON data to file, save the traces</title><link>https://www.safjan.com/append-json-data-to-file-save-traces/</link><description>&lt;h2&gt;The JSON Lines standard&lt;/h2&gt;
&lt;p&gt;Sometimes there is a need to store data in JSON format but simultaneously append data to files when new data arrive. JSON format stores data, on the top level, like a dictionary or a list it is not …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-06-03:/append-json-data-to-file-save-traces/</guid><category>note</category><category>append-json</category><category>data</category><category>json</category><category>trace</category><category>jsonlines</category><category>python</category></item><item><title>Bash - determine if script runs on Linux, macOS or other system</title><link>https://www.safjan.com/bash-determine-if-linux-or-macos/</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;unameOut&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;uname -s&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;unameOut&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
    Linux*&lt;span class="o"&gt;)&lt;/span&gt;     &lt;span class="nv"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Linux&lt;span class="p"&gt;;;&lt;/span&gt;
    Darwin*&lt;span class="o"&gt;)&lt;/span&gt;    &lt;span class="nv"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Mac&lt;span class="p"&gt;;;&lt;/span&gt;
    CYGWIN*&lt;span class="o"&gt;)&lt;/span&gt;    &lt;span class="nv"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Cygwin&lt;span class="p"&gt;;;&lt;/span&gt;
    MINGW*&lt;span class="o"&gt;)&lt;/span&gt;     &lt;span class="nv"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;MinGw&lt;span class="p"&gt;;;&lt;/span&gt;
    *&lt;span class="o"&gt;)&lt;/span&gt;          &lt;span class="nv"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;UNKNOWN:&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;unameOut&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;machine&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Credits:&lt;/strong&gt;
The solution from &lt;a href="https://stackoverflow.com/questions/3466166/how-to-check-if-running-in-cygwin-mac-or-linux"&gt;bash - How to check if running in Cygwin, Mac or Linux? - Stack Overflow&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-06-03:/bash-determine-if-linux-or-macos/</guid><category>note</category><category>bash</category><category>determine</category><category>linux</category><category>macos</category></item><item><title>Bash - encode, decode base64 and hex</title><link>https://www.safjan.com/bash-encode-decode-base64-and-hex/</link><description>&lt;h2&gt;Tools&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;xxd&lt;/code&gt; - make a hexdump or do the reverse.
&lt;code&gt;base64&lt;/code&gt; - base64 encode/decode data and print to standard output&lt;/p&gt;
&lt;h2&gt;Encode hex&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xxd -p
68656c6c6f0a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Decode hex&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;68656c6c6f0a&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xxd -r -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Encode base64&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; base64
aGVsbG8K
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Decode base64&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 20 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-20:/bash-encode-decode-base64-and-hex/</guid><category>note</category><category>base64</category><category>bash</category><category>decode</category><category>encode</category><category>hex</category></item><item><title>Auto documented makefile</title><link>https://www.safjan.com/auto-documented-makefile/</link><description>&lt;p&gt;This code adds a help option to make. Help is autogenerated from the comment in the line above the option.
Each option should have a comment above, as in the example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;## Convert markdown to pdf
pdf:    
    pandoc -N --toc --template template.latex …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/auto-documented-makefile/</guid><category>note</category><category>auto-documented</category><category>makefile</category><category>documentation</category><category>help</category><category>make-help</category></item><item><title>Awk</title><link>https://www.safjan.com/awk/</link><description>&lt;h2&gt;Validate CSV number of fields:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;awk &lt;span class="s1"&gt;&amp;#39;BEGIN{FS=&amp;quot;,&amp;quot;;x=1}{x++}NF!=3{print &amp;quot;wrong number of fields:&amp;quot; NF &amp;quot; in line:&amp;quot; x; exit}&amp;#39;&lt;/span&gt; valid.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;test data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a,b,c\n1,2,3\n11,12,13,14\n21,22,23&amp;quot;&lt;/span&gt; &amp;gt; invalid …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/awk/</guid><category>note</category><category>awk</category><category>gawk</category><category>mawk</category><category>snippet</category><category>alternative</category><category>Linux</category></item><item><title>Bash - file base name (without extension)</title><link>https://www.safjan.com/bash-base-name-without-extension/</link><description>&lt;h2&gt;file base name (without extension)&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;movie.mp4&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;basename&lt;/span&gt;&lt;span class="p"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;/.mp4&lt;/span&gt;&lt;span class="si"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Get the current directory name (without full path) in a Bash script&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;result&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="p"&gt;##*/&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;          &lt;span class="c1"&gt;# to assign to a variable&lt;/span&gt;

&lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="p"&gt;##*/&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# to print to stdout&lt;/span&gt;
                           &lt;span class="c1"&gt;# ...more robust than …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/bash-base-name-without-extension/</guid><category>note</category><category>base</category><category>basename</category><category>bash</category><category>extension</category><category>name</category><category>bash/basename</category></item><item><title>Bash - coloring output</title><link>https://www.safjan.com/bash-coloring/</link><description>&lt;h1&gt;Bash coloring&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Text color variables&lt;/span&gt;
&lt;span class="nv"&gt;txtund&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput sgr &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;          &lt;span class="c1"&gt;# Underline&lt;/span&gt;
&lt;span class="nv"&gt;txtbld&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput bold&lt;span class="k"&gt;)&lt;/span&gt;             &lt;span class="c1"&gt;# Bold&lt;/span&gt;
&lt;span class="nv"&gt;bldred&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;txtbld&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput setaf &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#  red&lt;/span&gt;
&lt;span class="nv"&gt;bldblu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;txtbld&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput setaf &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#  blue&lt;/span&gt;
&lt;span class="nv"&gt;bldwht&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;txtbld&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput setaf &lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#  7-gray, 15-white&lt;/span&gt;
&lt;span class="nv"&gt;bldorg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;txtbld&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput setaf &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#  orange&lt;/span&gt;
&lt;span class="nv"&gt;txtrst&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/bash-coloring/</guid><category>note</category><category>bash</category><category>coloring</category><category>cli</category><category>tui</category></item><item><title>Bash - continue: yes or no</title><link>https://www.safjan.com/bash-continue-yes-no/</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;do_backup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;y                      &lt;span class="c1"&gt;# In batch mode =&amp;gt; Default is Yes&lt;/span&gt;
&lt;span class="o"&gt;[[&lt;/span&gt; -t &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;                     &lt;span class="c1"&gt;# If TTY =&amp;gt; Prompt the question&lt;/span&gt;
&lt;span class="nb"&gt;read&lt;/span&gt; -r -n &lt;span class="m"&gt;1&lt;/span&gt; -p &lt;span class="s1"&gt;$&amp;#39;\e[1;32m&lt;/span&gt;
&lt;span class="s1"&gt;Continue with backup? (Y/n)\e[0m &amp;#39;&lt;/span&gt; do_backup  &lt;span class="c1"&gt;# Store the answer in $do_xxxx&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$do_backup …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/bash-continue-yes-no/</guid><category>note</category><category>bash</category><category>bash-continue-yes-no</category><category>continue</category></item><item><title>Bash - default argument for the script</title><link>https://www.safjan.com/bash-default-argument/</link><description>&lt;p&gt;See the example of &lt;code&gt;somecommand.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="nv"&gt;ARG1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;ARG2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;ARG3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;3&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;ARG4&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;4&lt;/span&gt;&lt;span class="k"&gt;:-$(&lt;/span&gt;date&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ARG1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ARG2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ARG3&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ARG4&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here are some examples of how this works:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ./somecommand.sh
foo
bar …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/bash-default-argument/</guid><category>note</category><category>default-argument</category><category>bash</category></item><item><title>Bash - download gist from Github</title><link>https://www.safjan.com/bash-download-gist-from-github/</link><description>&lt;h2&gt;Download, output content to stdout&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl -L https://gist.githubusercontent.com/izikeros/937b05e81b5dca81d3daf309ea6bad20/raw/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Download, save the output to file &lt;code&gt;my_file&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl -L https://gist.githubusercontent.com/izikeros/937b05e81b5dca81d3daf309ea6bad20/raw/ -o my_file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# curl options to use&lt;/span&gt;
curl -LJO
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Options (excepts …&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/bash-download-gist-from-github/</guid><category>note</category><category>bash</category><category>download</category><category>gist</category><category>github</category></item><item><title>Black - keep single quotes for strings</title><link>https://www.safjan.com/black-keep-single-quotes-strings/</link><description>&lt;p&gt;See: &lt;a href="https://github.com/psf/black/issues/594"&gt;Add --single-quote option · Issue #594 · psf/black · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Currently, it requires everyone who uses single quotes to run black and then have a second tool (we use pre-commit double-quote-string-fixer) to ensure that single quotes are being used consistently.&lt;/p&gt;
&lt;p&gt;From black documentation …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/black-keep-single-quotes-strings/</guid><category>note</category><category>black</category><category>single-string</category><category>quotation-mark</category></item><item><title>Change the character encoding</title><link>https://www.safjan.com/change-character-encoding/</link><description>&lt;p&gt;convert file &lt;code&gt;iconv.src&lt;/code&gt; from &lt;code&gt;iso-8859-1&lt;/code&gt; to &lt;code&gt;utf-8&lt;/code&gt; and save to &lt;code&gt;/tmp/iconv.out&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;iconv -f iso-8859-1 -t utf-8 iconv.src -o /tmp/iconv.out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/change-character-encoding/</guid><category>note</category><category>change</category><category>convert</category><category>text</category><category>character</category><category>encoding</category><category>iconv</category><category>utf-8</category><category>Linux</category></item><item><title>Check text file encoding</title><link>https://www.safjan.com/check-text-file-encoding/</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;file -bi en_CA_utf8.aff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/check-text-file-encoding/</guid><category>note</category><category>encoding</category><category>file</category><category>text</category><category>Linux</category></item><item><title>Chocolatey (Windows)</title><link>https://www.safjan.com/chocolatey/</link><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; 
there is already an official tool from Microsoft for downloading and upgrading software as packages: [[winget]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;install&lt;/h2&gt;
&lt;h3&gt;Step 1 — Opening and Configuring PowerShell&lt;/h3&gt;
&lt;p&gt;Open Powershell as admin&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;type: RemoteSigned&amp;quot;&lt;/span&gt;
Set-ExecutionPolicy -Scope CurrentUser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;RemoteSigned
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;confirm with &lt;code&gt;Y&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Confirmation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ Get-ExecutionPolicy …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/chocolatey/</guid><category>note</category><category>chocolatey</category><category>windows</category><category>packages</category><category>winget</category></item><item><title>Convert markdown to pdf</title><link>https://www.safjan.com/convert-markdown-to-pdf/</link><description>&lt;h2&gt;With pagination&lt;/h2&gt;
&lt;p&gt;convert with pandoc to pdf&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc &lt;span class="se"&gt;\&lt;/span&gt;
--from&lt;span class="o"&gt;=&lt;/span&gt;markdown &lt;span class="se"&gt;\&lt;/span&gt;
--standalone &lt;span class="se"&gt;\&lt;/span&gt;
--to&lt;span class="o"&gt;=&lt;/span&gt;pdf &lt;span class="se"&gt;\&lt;/span&gt;
--pdf-engine&lt;span class="o"&gt;=&lt;/span&gt;xelatex &lt;span class="se"&gt;\&lt;/span&gt;
--output&lt;span class="o"&gt;=&lt;/span&gt;book.pdf &lt;span class="se"&gt;\&lt;/span&gt;
--metadata &lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;My booklet&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Without pagination&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# convert to HTML&lt;/span&gt;
pandoc &lt;span class="se"&gt;\&lt;/span&gt;
--from&lt;span class="o"&gt;=&lt;/span&gt;markdown &lt;span class="se"&gt;\&lt;/span&gt;
--standalone &lt;span class="se"&gt;\&lt;/span&gt;
--to&lt;span class="o"&gt;=&lt;/span&gt;html &lt;span class="se"&gt;\&lt;/span&gt;
--output&lt;span class="o"&gt;=&lt;/span&gt;book.html &lt;span class="se"&gt;\&lt;/span&gt;
--metadata &lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;My book title&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
--toc …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/convert-markdown-to-pdf/</guid><category>note</category><category>conversion</category><category>markdown</category><category>pdf</category><category>pandoc</category><category>wkhtmltopdf</category><category>html</category></item><item><title>How to delete a Git branch locally and remotely?</title><link>https://www.safjan.com/git-delete-branch/</link><description>&lt;p&gt;delete branch locally&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git branch -d localBranchName
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;use &lt;code&gt;-D&lt;/code&gt; to force removing not fully-merged branches&lt;/p&gt;
&lt;p&gt;delete branch remotely&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git push origin --delete remoteBranchName
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;see also: 
[[git_delete_branches_merged_into_main_branch]]&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/git-delete-branch/</guid><category>note</category><category>branch</category><category>delete</category><category>git</category></item><item><title>Man alternatives, CLI command usage explanations, and cheatsheets</title><link>https://www.safjan.com/man-alternatives-usage-explanations-and-cheatsheets/</link><description>&lt;h2&gt;&lt;a href="https://tldr.sh/"&gt;tldr&lt;/a&gt; &lt;img alt="GitHub stars" src="https://img.shields.io/github/stars/tldr-pages/tldr.svg?logo=github"&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Simplified and community-driven man pages&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The tldr pages are a community effort to simplify the beloved &lt;a href="https://en.wikipedia.org/wiki/Man_page"&gt;man pages&lt;/a&gt; with practical examples.&lt;img alt="tldr" src="https://tldr.sh/assets/img/screenshot.png"&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://github.com/cheat/cheat"&gt;cheat&lt;/a&gt;&lt;img alt="GitHub stars" src="https://img.shields.io/github/stars/cheat/cheat.svg?logo=github"&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;cheat&lt;/code&gt; allows you to create and view interactive cheatsheets on the command-line. It was designed to help remind *nix …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/man-alternatives-usage-explanations-and-cheatsheets/</guid><category>note</category><category>alternatives</category><category>cheatsheet</category><category>man</category><category>someday</category><category>rofi</category><category>cli</category></item><item><title>Pytest check if lists are equal</title><link>https://www.safjan.com/pytest-check-lists-equal/</link><description>&lt;p&gt;In the assertions this can be useful to check if two lists are equal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;check_lists_equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;list_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Check if two lists are equal.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_1 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/pytest-check-lists-equal/</guid><category>note</category><category>pytest</category><category>python</category><category>assert</category></item><item><title>Pandas dataframe schema and data types validation</title><link>https://www.safjan.com/pandas-dataframe-validation/</link><description>&lt;h1&gt;Contents&lt;/h1&gt;
&lt;!-- MarkdownTOC levels='2,3' autolink=True autoanchor=True --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#pandera-515-stars---column-validation-columns-types-dataframe-schema"&gt;Pandera (515 stars) - column validation (columns, types), DataFrame Schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dataenforce-59-stars---columns-presence-validation"&gt;Dataenforce (59 stars) - columns presence validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#for-type-hinting-column-names-check-dtype-check"&gt;for type hinting (column names check, dtype check)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#to-enforce-validation-at-runtime"&gt;to enforce validation at runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#great-expectations---data-validation"&gt;Great expectations - data validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#automated-expectations-from-profiling"&gt;automated expectations from profiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pandas_schema-135-stars"&gt;pandas_schema (135 stars)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-data-validation-libraries"&gt;Other …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-27:/pandas-dataframe-validation/</guid><category>note</category><category>pandas</category><category>pandas/schema</category><category>pandas/validation</category><category>pandera</category><category>dataenforce</category><category>alternatives</category><category>alternative</category><category>great-expectations</category></item><item><title>Serve http files with python server</title><link>https://www.safjan.com/serve-http-files-with-python-server/</link><description>&lt;p&gt;Sometimes there is a need to serve HTML page instead of just displaying it in the browser:
- share content with others (allowing download)
- serve HTTP document with javascript when javascript can't be read due to CORS limitations.&lt;/p&gt;
&lt;p&gt;From the directory with the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-27:/serve-http-files-with-python-server/</guid><category>note</category><category>python</category><category>htttp</category><category>server</category><category>javascript</category></item><item><title>Change extension for multiple files in Zsh</title><link>https://www.safjan.com/change-extension-for-multiple-files-in-zsh/</link><description>&lt;p&gt;In Zsh it is a bit easier to perform this because of using &lt;code&gt;zmv&lt;/code&gt;. First, you need to load &lt;code&gt;zmv&lt;/code&gt;. In zsh, run the following command once (or put them in your ~/.zshrc for the future):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;autoload -U zmv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;change all extensions …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 22 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-22:/change-extension-for-multiple-files-in-zsh/</guid><category>note</category><category>zsh</category><category>shell</category><category>zmv</category></item><item><title>Use python TypedDict to type hint dictionaries</title><link>https://www.safjan.com/use-python-typeddict-to-type-hint-dictionaries/</link><description>&lt;p&gt;Define types for the fields in a dictionary using TypedDict as a base class to inherit from and then use this class in hints.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TypedDict&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NameInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TypedDict&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
    &lt;span class="n"&gt;first_letter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;NameInfo …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 22 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-22:/use-python-typeddict-to-type-hint-dictionaries/</guid><category>note</category><category>python</category><category>type-hints</category><category>TypedDict</category></item><item><title>Zsh - loop over files and run command</title><link>https://www.safjan.com/zsh-loop-over-files-and-run-command/</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; file &lt;span class="k"&gt;in&lt;/span&gt; ~/folder/*&lt;span class="p"&gt;;&lt;/span&gt; gpg &lt;span class="nv"&gt;$file&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;from: https://quintussential.com/archive/2019/01/26/Looping-over-files-in-zsh/&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 22 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-22:/zsh-loop-over-files-and-run-command/</guid><category>note</category><category>zsh</category><category>loop</category></item><item><title>Allow arbitrary types (such as Pandas Dataframe) in Pydantic</title><link>https://www.safjan.com/allow-arbitrary-types-pandas-in-pydantic/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 21 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-21:/allow-arbitrary-types-pandas-in-pydantic/</guid><category>note</category><category>pydantic</category><category>pandas</category><category>type-hints</category></item><item><title>Python - configuration management</title><link>https://www.safjan.com/python-configuration-management/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 14 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-14:/python-configuration-management/</guid><category>note</category><category>python</category><category>configuration</category><category>hydra</category><category>decouple</category></item><item><title>Clone partition in Linux</title><link>https://www.safjan.com/clone-partition-in-linux/</link><description>&lt;p&gt;how to clone disk partition in Linux&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 03 Mar 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-03-03:/clone-partition-in-linux/</guid><category>note</category><category>Linux</category><category>dd</category><category>pv</category><category>partition</category><category>disk</category></item><item><title>Python Add Parent Directory To Path</title><link>https://www.safjan.com/python-add-parent-directory-to-path/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 22 Feb 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-02-22:/python-add-parent-directory-to-path/</guid><category>note</category><category>python</category><category>gist</category><category>snippet</category><category>jupyter</category><category>notebook</category></item><item><title>Python - get file and path parts (dirname, base name, extension)</title><link>https://www.safjan.com/python-get-file-and-path-parts-dirname-base-name-extension/</link><description>&lt;p&gt;To split the full file name (e.g. &lt;code&gt;/root/dir/sub/file.ext&lt;/code&gt;) with a path into various parts you can use python built-in functions from the &lt;code&gt;os&lt;/code&gt; module.
You can retrieve:
- base name - just file name with extension (in our example …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 15 Feb 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-02-15:/python-get-file-and-path-parts-dirname-base-name-extension/</guid><category>note</category><category>base name</category><category>dirname</category><category>file extension</category><category>path</category><category>python</category></item><item><title>Most Popular Python Backtesting Libraries</title><link>https://www.safjan.com/popular-backtesting-libraries/</link><description>&lt;p&gt;Popular backtesting libraries with stars as popularity indicators.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 11 Feb 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-02-11:/popular-backtesting-libraries/</guid><category>note</category><category>backtesting</category><category>finance/crypto</category><category>finance/algotrading</category><category>finance</category><category>popularity</category></item><item><title>15 tools for document Deskewing and Dewarping</title><link>https://www.safjan.com/tools-for-doc-deskewing-and-dewarping/</link><description>&lt;p&gt;Sometimes input for document processing tasks such as OCR, table detection or text segmentation can be scanned or photo taken from hand that do not have ideal perspective - is rotated or spatially distorted in some way (warped document). If you are looking for my recommendations go straight to the last section of this article "Summary and recommendations".&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 11 Feb 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-02-11:/tools-for-doc-deskewing-and-dewarping/</guid><category>Data Science</category><category>document intelligence</category><category>document processing</category><category>computer vision</category><category>digital image processing</category><category>canny edge detector</category><category>hough transform</category><category>deep learning</category></item><item><title>How to get most of GitHub Copilot</title><link>https://www.safjan.com/how-to-get-most-of-github-copilot/</link><description>&lt;p&gt;This post describes techniques that help to get most accurate suggestions from the GitHub Copilot "Your AI pair programmer". For those who never heard of Copilot there is short introduction, if you already know Copilot - you can jump directly to section 4: "How to get most of GitHub Copilot".&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 25 Jan 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-01-25:/how-to-get-most-of-github-copilot/</guid><category>Howto</category><category>github</category><category>coding</category><category>ai</category></item><item><title>Git - delete branches that are merged into the main branch</title><link>https://www.safjan.com/git-delete-branches-merged-into-main-branch/</link><description>&lt;!-- MarkdownTOC levels='2,3' autolink=True autoanchor=True --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#first---fetch-and-prune"&gt;First - fetch and prune&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-do-i-clean-outdated-branches"&gt;How Do I Clean Outdated Branches?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#does-git-remote-prune-origin-delete-the-local-branch"&gt;Does Git Remote Prune Origin Delete the Local Branch?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#second---delete-merged-local-branches"&gt;Second - delete merged local branches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /MarkdownTOC --&gt;

&lt;p&gt;When actively developing feature branches that are later merged into develop branch you might end up with a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 16 Dec 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-12-16:/git-delete-branches-merged-into-main-branch/</guid><category>note</category><category>branch</category><category>delete</category><category>git</category><category>merged</category></item><item><title>Black - the code formatter</title><link>https://www.safjan.com/black-code-formatter/</link><description>&lt;p&gt;notes on using black formatter&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 29 Nov 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-11-29:/black-code-formatter/</guid><category>note</category><category>black</category><category>python</category><category>pyqa</category><category>quality</category></item><item><title>Top popular Zsh plugins on GitHub (2021)</title><link>https://www.safjan.com/top-popular-zsh-plugins-on-github-2021/</link><description>&lt;p&gt;There is an exhaustive but curated list of Zsh plugins posted on the GitHub project &lt;a href="https://github.com/unixorn/awesome-zsh-plugins"&gt;Awesome Zsh plugins&lt;/a&gt;. You can find there 1800+ links to plugins, themes, and Zsh plugin managers/frameworks. Even though it is a collection of awesome stuff, the number is a bit high to get orientation which plugins gained already good reputation from the Zsh users community. In this post, I will identify the most popular plugins - those which have the highest number of stars.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 29 Nov 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-11-29:/top-popular-zsh-plugins-on-github-2021/</guid><category>Linux</category><category>zsh</category><category>scrapping</category><category>python</category><category>linux</category></item><item><title>Git hooks</title><link>https://www.safjan.com/git-hooks/</link><description>&lt;p&gt;Example of how to set up git hooks manually or with pre-commit tool&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 20 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-20:/git-hooks/</guid><category>note</category><category>git</category><category>hooks</category><category>pre-commit hooks</category><category>software project</category><category>project</category></item><item><title>Time tracking apps</title><link>https://www.safjan.com/time-tracking-apps/</link><description>&lt;p&gt;In professional work both in corporation or as freelancer there might be a need to track - how much time you spent on different activities. There are already good apps that helps with that.&lt;/p&gt;
&lt;h1&gt;Solution that works best for me&lt;/h1&gt;
&lt;h2&gt;GTime&lt;/h2&gt;
&lt;p&gt;Manually log …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 20 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-20:/time-tracking-apps/</guid><category>note</category><category>time tracking</category><category>time management</category><category>billing</category><category>tracing</category><category>monitoring time</category><category>monitoring productivity</category><category>monitoring</category><category>productivity</category></item><item><title>Add logo to notebook header cell</title><link>https://www.safjan.com/add-logo-to-notebook-header/</link><description>&lt;p&gt;Instruction on how to add a logo to notebook header cell to strengthen visual identification of the project&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 12 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-12:/add-logo-to-notebook-header/</guid><category>note</category><category>jupyter</category><category>howto</category><category>notebook</category><category>jupyter-notebook</category><category>project</category><category>visual-identification</category><category>logo</category></item><item><title>Git add - stage changes in various ways</title><link>https://www.safjan.com/git-add/</link><description>&lt;p&gt;various options to stage git files with &lt;code&gt;git add&lt;/code&gt; command&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 12 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-12:/git-add/</guid><category>note</category><category>git</category></item><item><title>Pre-commit hooks</title><link>https://www.safjan.com/git-pre-commit-hooks/</link><description>&lt;p&gt;Pre-commit is a convenient framework to manage git hooks. Uses configuration in yaml file, handle the installation of required hooks and tools.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 08 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-08:/git-pre-commit-hooks/</guid><category>note</category><category>best-practices</category><category>commit</category><category>git</category><category>GitHub</category><category>hooks</category><category>management</category><category>project</category></item><item><title>Python - convert docstring styles</title><link>https://www.safjan.com/python-convert-docstring-styles/</link><description>&lt;p&gt;Description of tools for converting docstring style in python code&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 29 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-29:/python-convert-docstring-styles/</guid><category>note</category><category>convert</category><category>docstring</category><category>python</category><category>style</category></item><item><title>Python - docstrings styles</title><link>https://www.safjan.com/python-docstrings-styles/</link><description>&lt;p&gt;Most popular conventions used in python docstrings and format support in various tools.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 29 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-29:/python-docstrings-styles/</guid><category>note</category><category>docstrings</category><category>python</category><category>style</category></item><item><title>Python - project documentation from the code with pdoc3</title><link>https://www.safjan.com/python-documentation-with-pdoc3/</link><description>&lt;p&gt;summary&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 28 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-28:/python-documentation-with-pdoc3/</guid><category>note</category><category>documentation</category><category>pdoc3</category><category>python</category><category>documentation-generator</category><category>sphinx</category></item><item><title>Git - autocommit on file changes</title><link>https://www.safjan.com/git-autocommit-on-file-changes/</link><description>&lt;p&gt;How to create automatically commits if any file in the watched folder was changed&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 14 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-14:/git-autocommit-on-file-changes/</guid><category>note</category><category>git</category><category>autocommit</category><category>note-taking</category><category>notes</category><category>automatic</category><category>automation</category><category>git/autocommit</category></item><item><title>Interactive plots for blogging</title><link>https://www.safjan.com/interactive-plots-for-blogging/</link><description>&lt;p&gt;Using Plotly, Bokeh and Altair for interactive visualizations in the blog posts.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 13 Sep 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-09-13:/interactive-plots-for-blogging/</guid><category>Exploring new ideas</category><category>python</category><category>jupyter</category><category>blogging</category><category>pelican</category><category>visualization</category><category>interactive</category><category>plotly</category><category>bokeh</category><category>altair</category></item><item><title>Data Science Command-line Tools</title><link>https://www.safjan.com/data-science-command-line-tools/</link><description>&lt;p&gt;Description of GNU utils and other less standard tools that helps with processing data from CLI or with shell scripts.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 23 Aug 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-08-23:/data-science-command-line-tools/</guid><category>Linux</category><category>machine learning</category><category>linux</category></item><item><title>Finding the spy - post on Markov Chains and stochastic matrices</title><link>https://www.safjan.com/spy-catch/</link><description>&lt;p&gt;Using puzzle on tracing the high profile spy as excuse to showcase Markov Chains and demonstrate usage and properties e.g. Stationary distribution&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 10 Aug 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-08-10:/spy-catch/</guid><category>Exploring new ideas</category><category>python</category><category>jupyter</category><category>statistics</category><category>markov chains</category></item><item><title>Top popular Zsh plugins on GitHub (2019)</title><link>https://www.safjan.com/top-popular-zsh-plugins-on-github-2019/</link><description>&lt;p&gt;On Github project &lt;a href="https://github.com/unixorn/awesome-zsh-plugins"&gt;Awesome Zsh plugins&lt;/a&gt; you can find 1700+ links to plugins, themes and Zsh plugin managers/frameworks. The number of tools listed on that page is high and it is difficult to get orientation which plugins gained already good reputation from Zsh users community. This post aims at identifying most popular tools where popularity is measured with the number of stars that Github users added to given plugin or tool.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sun, 14 Jul 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-07-14:/top-popular-zsh-plugins-on-github-2019/</guid><category>Linux</category><category>zsh</category><category>scrapping</category><category>python</category><category>linux</category></item><item><title>Learn Bayesian methods in 4 steps - by reading and by doing</title><link>https://www.safjan.com/learn-bayesian-methods-in-4-steps-by-reading-and-by-doing/</link><description>&lt;p&gt;This post propose 4-steps path for learning Byesian methods. First step is goint through the book: "Bayesian methods for hackers", second, use complementary books for probability and statistics, third, read How to become a Bayesian in eight easy steps: An annotated reading list", and last, go throught the book full of exercises: "Think Bayes".&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 09 Jul 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-07-09:/learn-bayesian-methods-in-4-steps-by-reading-and-by-doing/</guid><category>Howto</category><category>machine learning</category><category>statistics</category><category>probability</category><category>howto</category></item><item><title>Kaggle evaluation metrics used for regression problems</title><link>https://www.safjan.com/kaggle-evaluation-metrics-used-for-regression-problems/</link><description>&lt;p&gt;This post describe evaluation metrics used in Kaggle competitions where problem to solve is has regression nature. Eight different metrics are described, namely: Absolute Error (AE), Mean Absolute Error (MAE), Weighted Mean Absolute Error (WMAE), Pearson Correlation Coefficient, Spearman’s Rank Correlation, Root Mean Squared Error (RMSE), Root Mean Squared Logarithmic Error (RMSLE), Mean Columnwise Root Mean Squared Error (MCRMSE).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-02-16:/kaggle-evaluation-metrics-used-for-regression-problems/</guid><category>Data Science</category><category>machine learning</category><category>evaluation</category><category>metrics</category><category>model performance evaluation</category><category>Kaggle</category></item><item><title>How to install TensorFlow and Keras on Windows 10</title><link>https://www.safjan.com/how-to-install-tensorflow-and-keras-on-windows-10/</link><description>&lt;p&gt;Guide on how to install TensorFlow cpu-only version - the case for machines without GPU supporting CUDA. Step-by-step procedure starting from creating conda environment till testing if TensorFlow and Keras Works.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 17 Jan 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-01-17:/how-to-install-tensorflow-and-keras-on-windows-10/</guid><category>'Howto'</category><category>machine learning</category><category>tensorflow</category><category>howto</category></item><item><title>Darwin Approach to Traveling Salesman</title><link>https://www.safjan.com/darwin-approach-to-traveling-salesman/</link><description>&lt;p&gt;Can the evolutionary approach crash the problem that brute-forcing will last far more than the age of the universe? This post shows how to attack the Traveling Salesman Problem using Darwin's approach. I'm describing the evolution model and design decisions. See the animation of how the population was evolving through the epochs.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 12 Jan 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-01-12:/darwin-approach-to-traveling-salesman/</guid><category>Exploring new ideas</category><category>machine learning</category><category>evolutionary</category></item><item><title>How to organize Data Science project based on Jupyter notebook</title><link>https://www.safjan.com/how-to-organize-data-science-project-based-on-jupyter-notebook/</link><description>&lt;p&gt;Having several notebook-based projects behind you might result in a mess in the projects directory. Organize your Data Science project based on Jupyter notebooks in a way that one can navigate through it. Especially that "the one" will be most probably you in a few months time. To achieve that: keep your projects directory clean, name the project in a descriptive way and take care of the internal structure of the project.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 05 Jan 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-01-05:/how-to-organize-data-science-project-based-on-jupyter-notebook/</guid><category>Howto</category><category>jupyter</category><category>python</category><category>notebook</category><category>howto</category><category>machine learning</category><category>best practices</category><category>project management</category></item><item><title>What's cooking</title><link>https://www.safjan.com/whats-cooking/</link><description>&lt;p&gt;Exploratory Data Analysis of the Kaggle's "What's cooking" competition dataset to get understanding what kind of data we are dealing with and get intuition of existing dependencies.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 05 Apr 2018 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2018-04-05:/whats-cooking/</guid><category>Data Science</category><category>python</category><category>jupyter</category><category>kaggle</category><category>NLP</category><category>EDA</category><category>machine learning</category></item><item><title>Blockchain implementation</title><link>https://www.safjan.com/blockchain-implementation/</link><description>&lt;p&gt;Python implementation of blockchain in few lines of code.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 26 Mar 2018 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2018-03-26:/blockchain-implementation/</guid><category>Exploring new ideas</category><category>blockchain</category><category>cryptocurrency</category><category>python</category><category>jupyter</category></item><item><title>Top popular Zsh plugins on GitHub</title><link>https://www.safjan.com/top-popular-zsh-plugins-on-github/</link><description>&lt;p&gt;There is an exhaustive but curated list of Zsh plugins posted on GitHub project &lt;a href="https://github.com/unixorn/awesome-zsh-plugins"&gt;Awesome Zsh plugins&lt;/a&gt;. You can find there 800+ links to plugins, themes and Zsh plugin managers/frameworks. Even though it is a collection of awesome stuff the number is a bit high get orientation which plugins gained already good reputation from Zsh users community. In this post I will identify most popular plugins - those which have the highest number of stars.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 22 Mar 2018 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2018-03-22:/top-popular-zsh-plugins-on-github/</guid><category>Linux</category><category>zsh</category><category>scrapping</category><category>python</category><category>linux</category></item></channel></rss>