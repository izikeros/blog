<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Krystian Safjan's Blog - Krystian Safjan</title><link>https://www.safjan.com/</link><description>Data Scientist | Researcher | Team Leader&lt;br&gt;&lt;br&gt; working at Ernst &amp;amp; Young and writing about &lt;a href="/category/data-science.html"&gt;Data Science and Visualization&lt;/a&gt;, on &lt;a href="/category/data-science.html"&gt;Machine Learning, Deep Learning&lt;/a&gt; and &lt;a href="/tag/nlp/"&gt;NLP&lt;/a&gt;. There are also some  &lt;a href="/category/howto.html"&gt;howto&lt;/a&gt; posts on tools and workflows.</description><lastBuildDate>Wed, 27 Apr 2022 00:00:00 +0200</lastBuildDate><item><title>Pandas dataframe schema and data types validation</title><link>https://www.safjan.com/pandas-dataframe-validation/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-27:/pandas-dataframe-validation/</guid><category>note</category></item><item><title>Serve http files with python server</title><link>https://www.safjan.com/serve-http-files-with-python-server/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-27:/serve-http-files-with-python-server/</guid><category>note</category><category>python</category><category>htttp</category><category>server</category><category>javascript</category></item><item><title>Change extension for multiple files in Zsh</title><link>https://www.safjan.com/change-extension-for-multiple-files-in-zsh/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 22 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-22:/change-extension-for-multiple-files-in-zsh/</guid><category>note</category><category>zsh</category><category>shell</category><category>zmv</category></item><item><title>Use python TypedDict to type hint dictionaries</title><link>https://www.safjan.com/use-python-typeddict-to-type-hint-dictionaries/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 22 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-22:/use-python-typeddict-to-type-hint-dictionaries/</guid><category>note</category></item><item><title>Zsh loop over files and run command</title><link>https://www.safjan.com/zsh-loop-over-files-and-run-command/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 22 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-22:/zsh-loop-over-files-and-run-command/</guid><category>note</category><category>zsh</category><category>loop</category></item><item><title>Alow arbitrary types (such as Pandas Dataframe) in Pydantic</title><link>https://www.safjan.com/allow-arbitrary-types-pandasa-in-pydantic/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 21 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-21:/allow-arbitrary-types-pandasa-in-pydantic/</guid><category>note</category><category>pydantic</category><category>pandas</category><category>type hints</category></item><item><title>Python configuration management</title><link>https://www.safjan.com/python-configuration-management/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 14 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-14:/python-configuration-management/</guid><category>note</category><category>python</category><category>configuration</category><category>hydra</category><category>decouple</category></item><item><title>Clone partition in Linux</title><link>https://www.safjan.com/clone-partition-in-linux/</link><description>&lt;p&gt;how to clone disk partition in&amp;nbsp;Linux&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 03 Mar 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-03-03:/clone-partition-in-linux/</guid><category>note</category><category>Linux</category><category>dd</category><category>pv</category><category>partition</category><category>disk</category></item><item><title>Python Add Parent Directory To Path</title><link>https://www.safjan.com/python-add-parent-directory-to-path/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 22 Feb 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-02-22:/python-add-parent-directory-to-path/</guid><category>note</category><category>python</category><category>gist</category><category>snippet</category><category>jupyter</category><category>notebook</category></item><item><title>Python - get file and path parts (dirname, base name, extension)</title><link>https://www.safjan.com/python-get-file-and-path-parts-dirname-base-name-extension/</link><description>&lt;p&gt;To split full file name (e.g. &lt;code&gt;/root/dir/sub/file.ext&lt;/code&gt;) with path into various parts you can use python build-in functions from the &lt;code&gt;os&lt;/code&gt; module.
You can retrieve:
- base name - just file name with extension (in our example: &lt;code&gt;file.ext …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 15 Feb 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-02-15:/python-get-file-and-path-parts-dirname-base-name-extension/</guid><category>note</category><category>base name</category><category>dirname</category><category>file extension</category><category>path</category><category>python</category></item><item><title>15 tools for document Deskewing and Dewarping</title><link>https://www.safjan.com/tools-for-doc-deskewing-and-dewarping/</link><description>&lt;p&gt;Sometimes input for document processing tasks such as &lt;span class="caps"&gt;OCR&lt;/span&gt;, table detection or text segmentation can be scanned or photo taken from hand that do not have ideal perspective - is rotated or spatially distorted in some way (warped document). If you are looking for my recommendations go straight to the last section of this article &amp;#8220;Summary and&amp;nbsp;recommendations&amp;#8221;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 11 Feb 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-02-11:/tools-for-doc-deskewing-and-dewarping/</guid><category>Data Science</category><category>document intelligence</category><category>document processing</category><category>computer vision</category><category>digital image processing</category><category>canny edge detector</category><category>hough transform</category><category>deep learning</category></item><item><title>How to get most of GitHub Copilot</title><link>https://www.safjan.com/how-to-get-most-of-github-copilot/</link><description>&lt;p&gt;This post describes techniques that help to get most accurate suggestions from the GitHub Copilot &amp;#8220;Your &lt;span class="caps"&gt;AI&lt;/span&gt; pair programmer&amp;#8221;. For those who never heard of Copilot there is short introduction, if you already know Copilot - you can jump directly to section 4: &amp;#8220;How to get most of GitHub&amp;nbsp;Copilot&amp;#8221;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 25 Jan 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-01-25:/how-to-get-most-of-github-copilot/</guid><category>Howto</category><category>github</category><category>coding</category><category>ai</category></item><item><title>Git - delete branches that are merged into main branch</title><link>https://www.safjan.com/git-delete-branches-merged-into-main-branch/</link><description>&lt;!-- MarkdownTOC levels='2,3' autolink=True --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#first---fetch-and-prune"&gt;First - fetch and prune&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-do-i-clean-outdated-branches"&gt;How Do I Clean Outdated&amp;nbsp;Branches?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#does-git-remote-prune-origin-delete-the-local-branch"&gt;Does Git Remote Prune Origin Delete the Local&amp;nbsp;Branch?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#second---delete-merged-local-branches"&gt;Second - delete merged local&amp;nbsp;branches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /MarkdownTOC --&gt;

&lt;p&gt;When actively developing feature branches that are later merged into develop branch you might end-up with bunch of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 16 Dec 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-12-16:/git-delete-branches-merged-into-main-branch/</guid><category>note</category><category>branch</category><category>delete</category><category>git</category><category>merged</category></item><item><title>Black code formatter</title><link>https://www.safjan.com/black-code-formatter/</link><description>&lt;p&gt;notes on using black&amp;nbsp;formatter&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 29 Nov 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-11-29:/black-code-formatter/</guid><category>note</category><category>black</category><category>python</category><category>pyqa</category></item><item><title>Top popular Zsh plugins on GitHub (2021)</title><link>https://www.safjan.com/top-popular-zsh-plugins-on-github-2021/</link><description>&lt;p&gt;There is an exhaustive but curated list of Zsh plugins posted on GitHub project &lt;a href="https://github.com/unixorn/awesome-zsh-plugins"&gt;Awesome Zsh plugins&lt;/a&gt;. You can find there 1800+ links to plugins, themes and Zsh plugin managers/frameworks. Even though it is a collection of awesome stuff, the number is a bit high to get orientation which plugins gained already good reputation from Zsh users community. In this post I will identify most popular plugins - those which have the highest number of&amp;nbsp;stars.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 29 Nov 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-11-29:/top-popular-zsh-plugins-on-github-2021/</guid><category>Linux</category><category>zsh</category><category>scrapping</category><category>python</category><category>linux</category></item><item><title>Git hooks</title><link>https://www.safjan.com/git-hooks/</link><description>&lt;p&gt;Example how to set up git hooks manually or with pre-commit&amp;nbsp;tool&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 20 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-20:/git-hooks/</guid><category>note</category><category>git</category><category>hooks</category><category>pre-commit hooks</category><category>software project</category><category>project</category></item><item><title>Time tracking apps</title><link>https://www.safjan.com/time-tracking-apps/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 20 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-20:/time-tracking-apps/</guid><category>note</category><category>time tracking</category><category>time management</category><category>billing</category><category>tracing</category><category>monitoring time</category><category>monitoring productivity</category><category>monitoring</category><category>productivity</category></item><item><title>Add logo to notebook header cell</title><link>https://www.safjan.com/add-logo-to-notebook-header/</link><description>&lt;p&gt;Instruction hot to add logo to notebook header cell to strenghten visual-identification of the&amp;nbsp;project&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 12 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-12:/add-logo-to-notebook-header/</guid><category>note</category><category>jupyter</category><category>howto</category><category>notebook</category><category>jupyter-notebook</category><category>project</category><category>visual-identification</category><category>logo</category></item><item><title>Git add</title><link>https://www.safjan.com/git-add/</link><description>&lt;p&gt;various options to stage git files with &lt;code&gt;git add&lt;/code&gt; command&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 12 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-12:/git-add/</guid><category>note</category><category>git</category></item><item><title>Git pre-commit hooks</title><link>https://www.safjan.com/git-pre-commit-hooks/</link><description>&lt;p&gt;Pre-commit is convenient framework to manage git hooks. Uses configuration in yaml file, handle installation of required hooks and&amp;nbsp;tools.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 08 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-08:/git-pre-commit-hooks/</guid><category>note</category><category>best practices</category><category>commit</category><category>git</category><category>github</category><category>hooks</category><category>management</category><category>project</category></item><item><title>Python convert docstring styles</title><link>https://www.safjan.com/python-convert-docstring-styles/</link><description>&lt;p&gt;Description of tools for converting docstring style in python&amp;nbsp;code&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 29 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-29:/python-convert-docstring-styles/</guid><category>note</category><category>convert</category><category>docstring</category><category>python</category><category>style</category></item><item><title>Python docstrings styles</title><link>https://www.safjan.com/python-docstrings-styles/</link><description>&lt;p&gt;Most popular conventions used in python docstrings and format support in various&amp;nbsp;tools.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 29 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-29:/python-docstrings-styles/</guid><category>note</category><category>docstrings</category><category>python</category><category>style</category></item><item><title>Python project documentation from the code with pdoc3</title><link>https://www.safjan.com/python-documentation-with-pdoc3/</link><description>&lt;p&gt;summary&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 28 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-28:/python-documentation-with-pdoc3/</guid><category>note</category><category>documentation</category><category>pdoc3</category><category>python</category><category>documentation generator</category></item><item><title>Git autocommit on file changes</title><link>https://www.safjan.com/git-autocommit-on-file-changes/</link><description>&lt;p&gt;How to create automatically commits if any file in watched folder was&amp;nbsp;changed&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 14 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-14:/git-autocommit-on-file-changes/</guid><category>note</category><category>git</category><category>autocommit</category><category>note-taking</category><category>notes</category></item><item><title>Interactive plots for blogging</title><link>https://www.safjan.com/interactive-plots-for-blogging/</link><description>&lt;p&gt;Using Plotly, Bokeh and Altair for interactive visualizations in the blog&amp;nbsp;posts.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 13 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-13:/interactive-plots-for-blogging/</guid><category>Exploring new ideas</category><category>python</category><category>jupyter</category><category>blogging</category><category>pelican</category><category>visualization</category><category>interactive</category><category>plotly</category><category>bokeh</category><category>altair</category></item><item><title>Data Science Command line Tools</title><link>https://www.safjan.com/data-science-command-line-tools/</link><description>&lt;p&gt;Description of &lt;span class="caps"&gt;GNU&lt;/span&gt; utils and other less standard tools that helps with processing data from &lt;span class="caps"&gt;CLI&lt;/span&gt; or with shell&amp;nbsp;scripts.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 23 Aug 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-08-23:/data-science-command-line-tools/</guid><category>Linux</category><category>machine learning</category><category>linux</category></item><item><title>Finding the spy - post on Markov Chains and stochastic matrices</title><link>https://www.safjan.com/spy-catch/</link><description>&lt;p&gt;Using puzzle on tracing the high profile spy as excuse to showcase Markov Chains and demonstrate usage and properties e.g. Stationary&amp;nbsp;distribution&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 10 Aug 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-08-10:/spy-catch/</guid><category>Exploring new ideas</category><category>python</category><category>jupyter</category><category>statistics</category><category>markov chains</category></item><item><title>Top popular Zsh plugins on GitHub (2019)</title><link>https://www.safjan.com/top-popular-zsh-plugins-on-github-2019/</link><description>&lt;p&gt;On Github project &lt;a href="https://github.com/unixorn/awesome-zsh-plugins"&gt;Awesome Zsh plugins&lt;/a&gt; you can find 1700+ links to plugins, themes and Zsh plugin managers/frameworks. The number of tools listed on that page is high and it is difficult to get orientation which plugins gained already good reputation from Zsh users community. This post aims at identifying most popular tools where popularity is measured with the number of stars that Github users added to given plugin or&amp;nbsp;tool.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sun, 14 Jul 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-07-14:/top-popular-zsh-plugins-on-github-2019/</guid><category>Linux</category><category>zsh</category><category>scrapping</category><category>python</category><category>linux</category></item><item><title>Learn Bayesian methods in 4 steps - by reading and by doing</title><link>https://www.safjan.com/learn-bayesian-methods-in-4-steps-by-reading-and-by-doing/</link><description>&lt;p&gt;This post propose 4-steps path for learning Byesian methods. First step is goint through the book: &amp;#8220;Bayesian methods for hackers&amp;#8221;, second, use complementary books for probability and statistics, third, read How to become a Bayesian in eight easy steps: An annotated reading list&amp;#8221;, and last, go throught the book full of exercises: &amp;#8220;Think&amp;nbsp;Bayes&amp;#8221;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 09 Jul 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-07-09:/learn-bayesian-methods-in-4-steps-by-reading-and-by-doing/</guid><category>Howto</category><category>machine learning</category><category>statistics</category><category>probability</category><category>howto</category></item><item><title>Kaggle evaluation metrics used for regression problems</title><link>https://www.safjan.com/kaggle-evaluation-metrics-used-for-regression-problems/</link><description>&lt;p&gt;This post describe evaluation metrics used in Kaggle competitions where problem to solve is has regression nature. Eight different metrics are described, namely: Absolute Error (&lt;span class="caps"&gt;AE&lt;/span&gt;), Mean Absolute Error (&lt;span class="caps"&gt;MAE&lt;/span&gt;), Weighted Mean Absolute Error (&lt;span class="caps"&gt;WMAE&lt;/span&gt;), Pearson Correlation Coefficient, Spearman’s Rank Correlation, Root Mean Squared Error (&lt;span class="caps"&gt;RMSE&lt;/span&gt;), Root Mean Squared Logarithmic Error (&lt;span class="caps"&gt;RMSLE&lt;/span&gt;), Mean Columnwise Root Mean Squared Error (&lt;span class="caps"&gt;MCRMSE&lt;/span&gt;).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-02-16:/kaggle-evaluation-metrics-used-for-regression-problems/</guid><category>Data Science</category><category>machine learning</category><category>evaluation</category><category>metrics</category><category>model performance evaluation</category><category>Kaggle</category></item><item><title>How to install TensorFlow and Keras on Windows 10</title><link>https://www.safjan.com/how-to-install-tensorflow-and-keras-on-windows-10/</link><description>&lt;p&gt;Guide on how to install TensorFlow cpu-only version - the case for machines without &lt;span class="caps"&gt;GPU&lt;/span&gt; supporting &lt;span class="caps"&gt;CUDA&lt;/span&gt;. Step-by-step procedure starting from creating conda environment till testing if TensorFlow and Keras&amp;nbsp;Works.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 17 Jan 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-01-17:/how-to-install-tensorflow-and-keras-on-windows-10/</guid><category>'Howto'</category><category>machine learning</category><category>tensorflow</category><category>howto</category></item><item><title>Darwin Approach to Traveling Salesman</title><link>https://www.safjan.com/darwin-approach-to-traveling-salesman/</link><description>&lt;p&gt;Can the evolutionary approach crash the problem that brute-forcing will last far more than the age of the universe? This post shows how to attack the Traveling Salesman Problem using Darwin&amp;#8217;s approach. I&amp;#8217;m describing the evolution model and design decisions. See the animation of how the population was evolving through the&amp;nbsp;epochs.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 12 Jan 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-01-12:/darwin-approach-to-traveling-salesman/</guid><category>Exploring new ideas</category><category>machine learning</category><category>evolutionary</category></item><item><title>How to organize Data Science project based on Jupyter notebook</title><link>https://www.safjan.com/how-to-organize-data-science-project-based-on-jupyter-notebook/</link><description>&lt;p&gt;Having several notebook-based projects behind you might result in a mess in the projects directory. Organize your Data Science project based on Jupyter notebooks in a way that one can navigate through it. Especially that &amp;#8220;the one&amp;#8221; will be most probably you in a few months time. To achieve that: keep your projects directory clean, name the project in a descriptive way and take care of the internal structure of the&amp;nbsp;project.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 05 Jan 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-01-05:/how-to-organize-data-science-project-based-on-jupyter-notebook/</guid><category>Howto</category><category>jupyter</category><category>python</category><category>notebook</category><category>howto</category><category>machine learning</category><category>best practices</category><category>project management</category></item><item><title>What’s cooking</title><link>https://www.safjan.com/whats-cooking/</link><description>&lt;p&gt;Exploratory Data Analysis of the Kaggle&amp;#8217;s &amp;#8220;What&amp;#8217;s cooking&amp;#8221; competition dataset to get understanding what kind of data we are dealing with and get intuition of existing&amp;nbsp;dependencies.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 05 Apr 2018 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2018-04-05:/whats-cooking/</guid><category>Data Science</category><category>python</category><category>jupyter</category><category>kaggle</category><category>NLP</category><category>EDA</category><category>machine learning</category></item><item><title>Blockchain implementation</title><link>https://www.safjan.com/blockchain-implementation/</link><description>&lt;p&gt;Python implementation of blockchain in few lines of&amp;nbsp;code.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 26 Mar 2018 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2018-03-26:/blockchain-implementation/</guid><category>Exploring new ideas</category><category>blockchain</category><category>cryptocurrency</category><category>python</category><category>jupyter</category></item><item><title>Top popular Zsh plugins on GitHub</title><link>https://www.safjan.com/top-popular-zsh-plugins-on-github/</link><description>&lt;p&gt;There is an exhaustive but curated list of Zsh plugins posted on GitHub project &lt;a href="https://github.com/unixorn/awesome-zsh-plugins"&gt;Awesome Zsh plugins&lt;/a&gt;. You can find there 800+ links to plugins, themes and Zsh plugin managers/frameworks. Even though it is a collection of awesome stuff the number is a bit high get orientation which plugins gained already good reputation from Zsh users community. In this post I will identify most popular plugins - those which have the highest number of&amp;nbsp;stars.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 22 Mar 2018 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2018-03-22:/top-popular-zsh-plugins-on-github/</guid><category>Linux</category><category>zsh</category><category>scrapping</category><category>python</category><category>linux</category></item></channel></rss>