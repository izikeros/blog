<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Krystian Safjan's Blog</title><link>https://www.safjan.com/</link><description>Data Scientist | Researcher | Team Leader&lt;br&gt;&lt;br&gt; working at Ernst &amp;amp; Young and writing about &lt;a href="/category/data-science.html"&gt;Data Science and Visualization&lt;/a&gt;, on &lt;a href="/category/data-science.html"&gt;Machine Learning, Deep Learning&lt;/a&gt; and &lt;a href="/tag/nlp/"&gt;NLP&lt;/a&gt;. There are also some  &lt;a href="/category/howto.html"&gt;howto&lt;/a&gt; posts on tools and workflows.</description><lastBuildDate>Thu, 02 Feb 2023 00:00:00 +0100</lastBuildDate><item><title>Using markmap mindmap diagrams in Pelican Blog</title><link>https://www.safjan.com/markmap-mindmap-in-pelican-blog/</link><description>&lt;p&gt;Embedding a markmap mindmap in a Pelican blog post written in Markdown requires a few steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install the markmap library by running &lt;code&gt;npm install -g markmap&lt;/code&gt; in your command line.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a mindmap file in the &lt;code&gt;.mm&lt;/code&gt; format using a tool such …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 02 Feb 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-02-02:/markmap-mindmap-in-pelican-blog/</guid><category>note</category><category>mindmap</category><category>mindmapping</category><category>diagram</category><category>visualization</category><category>markmap</category><category>pelican</category></item><item><title>New Cognitive Skills in the Age of AI Tailored Information Presentation</title><link>https://www.safjan.com/pros-and-cons-of-reliance-on-ai-generating-models/</link><description>&lt;p&gt;Exploring the new cognitive skills of tomorrow with advanced AI generative models.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 02 Feb 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-02-02:/pros-and-cons-of-reliance-on-ai-generating-models/</guid><category>Machine Learning</category><category>AI</category><category>future</category><category>cognitive-skills</category><category>critical-thinking</category><category>language-models</category></item><item><title>Writing A Book Or Ebook In Markdown</title><link>https://www.safjan.com/writing-a-book-or-ebook-in-markdown/</link><description>&lt;p&gt;up::[[MOC_content_creation]]&lt;/p&gt;
&lt;h1&gt;book/writing #content-creation #pandoc #markdown #blog/post-idea&lt;/h1&gt;
&lt;h2&gt;General approach&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;What is the best setup for writing book in markdown. Book has multiple chapters. It should be possible to style the rendered ebook. Which tools to use?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To write a book …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 02 Feb 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-02-02:/writing-a-book-or-ebook-in-markdown/</guid><category>note</category><category>markdown</category><category>content-creation</category><category>pandoc</category><category>calibre</category><category>git</category><category>epub</category><category>mobi</category><category>Asciidoctor</category><category>weasyprint</category></item><item><title>The Impact of Search Engines and AI Generative Models on Mental and Cognitive Capabilities</title><link>https://www.safjan.com/impact_of_google_search_and_llms_on_methal_capabilities/</link><description>&lt;p&gt;Understand the effects of search engines and AI on our mental and cognitive capabilities. Equip yourself with the knowledge you need to make informed decisions about your own usage of these technologies.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 01 Feb 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-02-01:/impact_of_google_search_and_llms_on_methal_capabilities/</guid><category>Machine Learning</category><category>machine-learning</category><category>AI</category><category>cognitive-skills</category><category>memory</category><category>creativity</category></item><item><title>Leveraging Language Models in Corporate Environments: The Future of Knowledge Management</title><link>https://www.safjan.com/language-models-for-knowledge-management-in-corporate/</link><description>&lt;p&gt;Explore the benefits and challenges of using Large Language Models (LLMs) in corporate environments for improved knowledge management. Learn how to implement LLMs and overcome potential obstacles.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 01 Feb 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-02-01:/language-models-for-knowledge-management-in-corporate/</guid><category>Machine Learning</category><category>AI</category><category>NLP</category><category>LLM</category><category>language-models</category><category>knowledge-management</category><category>corporate</category></item><item><title>Top popular Zsh plugins on GitHub (2023)</title><link>https://www.safjan.com/top-popular-zsh-plugins-on-github-2023/</link><description>&lt;p&gt;Explore the most popular Zsh plugins from the 2000+ options on the Awesome Zsh plugins GitHub project. See which ones have the highest number of stars from the Zsh community.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 30 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-30:/top-popular-zsh-plugins-on-github-2023/</guid><category>Linux</category><category>zsh</category><category>scrapping</category><category>python</category><category>Linux</category></item><item><title>Becoming a Data Wizard: The Benefits of Learning Databricks</title><link>https://www.safjan.com/why-to-learn-databricks/</link><description>&lt;p&gt;Learn how Databricks can help you master big data, improve data processing and machine learning skills and excel in your career. Boost your career with this powerful platform.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 30 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-30:/why-to-learn-databricks/</guid><category>Machine Learning</category><category>machine-learning</category><category>databricks</category><category>data-engineering</category></item><item><title>Which method of model packaging should I used?</title><link>https://www.safjan.com/methods-for-python-ml-models-packaging-and-deployment/</link><description>&lt;p&gt;X::[[machine_learning_model_packaging]]&lt;/p&gt;
&lt;p&gt;There are several alternative methods of packaging ML models, and the appropriate method will depend on the specific use case and requirements. Some alternative methods include:&lt;/p&gt;
&lt;h3&gt;Complex models that have many dependencies, or for models that need to run on …&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 27 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-27:/methods-for-python-ml-models-packaging-and-deployment/</guid><category>note</category><category>machine-learning</category></item><item><title>Compress, reduce or minimize size of PDF document</title><link>https://www.safjan.com/pdf-compress-reduce-size-minimize/</link><description>&lt;h2&gt;pdfminify&lt;/h2&gt;
&lt;p&gt;use python package: pdfminify&lt;/p&gt;
&lt;h2&gt;ghostscript&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/prepress -dNOPAUSE -dQUIET -dBATCH -sOutputFile=compressed_PDF_file.pdf input_PDF_file.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the above command, you should add the correct path of the input and out PDF file.&lt;/p&gt;
&lt;p&gt;The command looks …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 27 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-27:/pdf-compress-reduce-size-minimize/</guid><category>note</category><category>pdf</category><category>ghostscript</category><category>pdfminify</category><category>compress</category><category>publishing</category></item><item><title>Databricks Potential Usages</title><link>https://www.safjan.com/databricks-potential-usages/</link><description>&lt;p&gt;Databricks is a cloud-based platform for big data processing and analytics. Here are some common use cases:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data Engineering&lt;/strong&gt;
Databricks can be used to ingest, clean, and transform large datasets in preparation for analysis.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt;
Databricks provides a number of tools …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 25 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-25:/databricks-potential-usages/</guid><category>note</category><category>machine-learning</category><category>data-engineering</category><category>databricks</category></item><item><title>Programatic diagram generation</title><link>https://www.safjan.com/diagram-generation/</link><description>&lt;!-- MarkdownTOC levels="2,3" autolink="true" autoanchor="true" --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#methods"&gt;Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples"&gt;Examples&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#graphviz"&gt;Graphviz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mermaid"&gt;Mermaid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ascii-art"&gt;ASCII Art&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#latex-tikz"&gt;LaTeX Tikz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /MarkdownTOC --&gt;

&lt;p&gt;&lt;a id="methods"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Methods&lt;/h2&gt;
&lt;p&gt;There are several ways to represent diagrams in text format, including:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ascii art&lt;/strong&gt;: This is a form of drawing using characters from the ASCII character set, such as +, -, and | to create simple diagrams …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 25 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-25:/diagram-generation/</guid><category>note</category><category>diagram</category><category>visualization</category><category>graphviz</category><category>uml</category><category>mermaid</category><category>latex</category></item><item><title>Policies in MLOps</title><link>https://www.safjan.com/mlops-policies/</link><description>&lt;p&gt;Discover the secrets to successful MLOps - From planning to deployment, get a comprehensive guide to ML policies.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 25 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-25:/mlops-policies/</guid><category>MLOps</category><category>mlops</category></item><item><title>Combining neural networks and evolutionary algorithms</title><link>https://www.safjan.com/combining-neural-networks-and-evolutionary-algorithms/</link><description>&lt;p&gt;Evolutionary algorithms (EAs) can be used in conjunction with neural networks (NNs) in a variety of ways. One of the most common applications is the optimization of the weights of a NN using an EA. This process is known as neuroevolution and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 23 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-23:/combining-neural-networks-and-evolutionary-algorithms/</guid><category>note</category><category>neural-networks</category><category>machine-learning</category><category>evolutionary</category><category>genetic-algorithms</category><category>udemy</category></item><item><title>MLOps scorecard - How advanced is your organization in implementing MLOps processes?</title><link>https://www.safjan.com/mlops-scorecard/</link><description>&lt;p&gt;Use proposed scorecard to assess how advanced is your organization in implementing MLOps processes.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 21 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-21:/mlops-scorecard/</guid><category>MLOps</category><category>mlops</category></item><item><title>Common Types of Data Science Projects</title><link>https://www.safjan.com/common-types-of-data-science-projects/</link><description>&lt;p&gt;Learn about common types of data science projects and best practices for approaching them. From end-to-end individual work to production-ready projects, this guide covers it all.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 19 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-19:/common-types-of-data-science-projects/</guid><category>Machine Learning</category><category>machine-learning</category><category>project</category><category>software-maintenence</category><category>software-development</category><category>software-project</category><category>jupyter</category></item><item><title>Using Graphviz (dot) Diagrams in Pelican Blog</title><link>https://www.safjan.com/graphviz-dot-diagram-in-pelican-blog/</link><description>&lt;p&gt;One way to dynamically generate Graphviz diagrams in a Pelican blog post written in Markdown is to use a plugin that can parse code fences labeled as &lt;code&gt;dot&lt;/code&gt; or &lt;code&gt;graphviz&lt;/code&gt; and convert the contents of the code fence into a diagram.&lt;/p&gt;
&lt;p&gt;One …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 19 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-19:/graphviz-dot-diagram-in-pelican-blog/</guid><category>note</category><category>graphviz</category><category>visualization</category><category>pelican</category></item><item><title>Histogram intersection</title><link>https://www.safjan.com/histogram-intersection/</link><description>&lt;p&gt;summary&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 18 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-18:/histogram-intersection/</guid><category>note</category><category>machine-learning</category><category>histogram</category></item><item><title>Tools that Helps to Understand and Tweak Random Forest Classifier</title><link>https://www.safjan.com/random-forest-understand-and-tweak/</link><description>&lt;p&gt;Random Forest is a popular machine learning algorithm, known for its high accuracy and versatility. However, it can be challenging to understand the inner workings of the algorithm and tweak its parameters for optimal performance. In this article, we will explore some …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 18 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-18:/random-forest-understand-and-tweak/</guid><category>note</category><category>machine-learning</category><category>random-forest</category><category>xai</category></item><item><title>How to use the Polish WordNet in Python?</title><link>https://www.safjan.com/How-to-use-Polish-wordnet-in-python/</link><description>&lt;p&gt;Related articles:
- &lt;a href="https://pythonawesome.com/unofficial-python-library-for-using-the-polish-wordnet/"&gt;Unofficial Python library for using the Polish Wordnet&lt;/a&gt; - python
&lt;code&gt;plwordnet&lt;/code&gt; package
- &lt;a href="http://ltc.amu.edu.pl/polnet/"&gt;PolNet - Polish Wordnet&lt;/a&gt;
- &lt;a href="https://www.academia.edu/67032319/Polish_WordNet_on_a_Shoestring"&gt;(PDF) Polish WordNet on a Shoestring | Magdalena Derwojedowa - Academia.edu&lt;/a&gt;
- &lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.org/project/plwordnet/"&gt;plwordnet · PyPI&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I created this library, because since version 2.9, PlWordNet cannot be easily loaded …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 17 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-17:/How-to-use-Polish-wordnet-in-python/</guid><category>note</category><category>machine-learning</category><category>NLP</category><category>wordnet</category></item><item><title>Creating Command Line Tools from Machine Learning Models</title><link>https://www.safjan.com/creating-command-line-tools-from-machine-learning-models/</link><description>&lt;p&gt;Machine learning (ML) models are becoming increasingly popular in various industries, and as a result, the need to distribute and deploy these models in a secure, portable, and efficient manner has become crucial. One way to accomplish this is by creating command …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 17 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-17:/creating-command-line-tools-from-machine-learning-models/</guid><category>note</category><category>machine-learning</category><category>packaging</category><category>deployment</category><category>model-delivery</category><category>cli</category><category>commandline</category></item><item><title>3 Pieces of Popular MLOps Advice to Ignore — and What to Do Instead</title><link>https://www.safjan.com/pieces-of-popular%20mlops-advice-to-ignore-what-to-do-instead/</link><description>&lt;p&gt;Discover 3 common MLOps advice to avoid and learn better alternatives to improve your machine learning operations. Learn to use modular, polyglot and multi-cloud approach.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 17 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-17:/pieces-of-popular mlops-advice-to-ignore-what-to-do-instead/</guid><category>note</category><category>mlops</category></item><item><title>What are the most popular private services that people decide to self-host?</title><link>https://www.safjan.com/self-hosted-private-services/</link><description>&lt;!-- MarkdownTOC autolink="true" autoanchor="true" --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#popular-self-hosted-services-for-private-or-family-usage"&gt;Popular self-hosted services for private (or family) usage&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#file-servers"&gt;File servers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#media-servers"&gt;Media servers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#home-automation"&gt;Home automation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#backup-services"&gt;Backup services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vpn-servers"&gt;VPN servers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#services-that-getting-popularity-for-self-hosting"&gt;Services that getting popularity for self-hosting&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#personal-finance"&gt;Personal Finance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#personal-crm"&gt;Personal CRM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#personal-knowledge-management"&gt;Personal Knowledge Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#personal-health-management"&gt;Personal Health Management&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-devices-can-be-used-for-self-hosting-of-private-services"&gt;What devices can be used for self-hosting of …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 17 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-17:/self-hosted-private-services/</guid><category>note</category><category>self-hosted</category><category>nas</category></item><item><title>The Benefits of Packaging an ML Model as a Python PEX File</title><link>https://www.safjan.com/the-benefits-of-packaging-an-ml-model-as-a-python-pex-file/</link><description>&lt;!-- MarkdownTOC autolink="true" autoanchor="true" --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-benefits-of-packaging-an-ml-model-as-a-python-pex-file"&gt;The Benefits of Packaging an ML Model as a Python PEX File&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#portability"&gt;Portability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#security"&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reproducibility"&gt;Reproducibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#speed"&gt;Speed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#flexibility"&gt;Flexibility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#when-the-other-than-pex-based-method-of-model-packaging-should-be-used"&gt;When the other than pex-based method of model packaging should be used?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /MarkdownTOC --&gt;

&lt;p&gt;Machine learning (ML) models are becoming increasingly popular in various industries, and as …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 17 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-17:/the-benefits-of-packaging-an-ml-model-as-a-python-pex-file/</guid><category>note</category><category>python</category><category>packaging</category></item><item><title>Deploying MLFlow on Local Machine using Docker</title><link>https://www.safjan.com/deploying-mlflow-on-local-machine-using-docker/</link><description>&lt;p&gt;Docker is a popular tool that allows you to package, deploy, and run your applications in containers. In this tutorial, we will show you how to use Docker to deploy an MLFlow server on your local machine.&lt;/p&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; should be installed …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 16 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-16:/deploying-mlflow-on-local-machine-using-docker/</guid><category>note</category><category>mlflow</category><category>machine-learning</category><category>mlops</category><category>docker</category></item><item><title>The difference between Machine Learning Development and traditional Software Development</title><link>https://www.safjan.com/machine-learning-vs-software_development/</link><description>&lt;p&gt;summary&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 16 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-16:/machine-learning-vs-software_development/</guid><category>note</category><category>mlops</category><category>software-development</category><category>software-maintenence</category><category>machine-learning</category></item><item><title>When Bayesian methods are not the best option?</title><link>https://www.safjan.com/when-the-bayesian-methods-are-not-the-best-option/</link><description>&lt;p&gt;Bayesian methods are a powerful tool for probabilistic modeling and inference, but they may not be the best choice in certain situations. Here are a few examples of when it might be better to use alternative methods:&lt;/p&gt;
&lt;p&gt;&lt;a id="when-the-data-is-scarce-or-the-model-is-very-complex"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;When the data is scarce …&lt;/h2&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 16 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-16:/when-the-bayesian-methods-are-not-the-best-option/</guid><category>note</category><category>bayesian</category><category>machine-learning</category></item><item><title>Don't Just Create Backups, Verify Them: How Restic Can Help?</title><link>https://www.safjan.com/verify-backups-restic-example/</link><description>&lt;p&gt;Learn how to verify your backups with Restic, ensure completeness, integrity, and recoverability. Automate the process for peace of mind. Read now&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sun, 15 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-15:/verify-backups-restic-example/</guid><category>Howto</category><category>linux</category><category>backup</category><category>good-practices</category><category>restic</category></item><item><title>How to experiment with MLFlow locally on laptop or PC? Instructions for the local setup.</title><link>https://www.safjan.com/how-to-experiment-with-mlflow-locally-on-laptop-or-pc/</link><description>&lt;p&gt;summary&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 14 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-14:/how-to-experiment-with-mlflow-locally-on-laptop-or-pc/</guid><category>note</category><category>mlops</category><category>mlflow</category><category>machine-learning</category></item><item><title>MLOps Roadmap</title><link>https://www.safjan.com/mlops-roadmap/</link><description>&lt;p&gt;Roadmap to become MLOps. The 6 points, ordered plan on things to learn.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.  Data Management&lt;/strong&gt;
Understand the data pipeline, data governance, and data quality.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.  Experimentation&lt;/strong&gt;
Learn about experimentation frameworks, version control, and reproducibility.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.  Model Development&lt;/strong&gt;
Understand model development life …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 14 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-14:/mlops-roadmap/</guid><category>note</category><category>mlops</category><category>learning</category></item><item><title>10 scikit-learn exercises for aspiring data scientists</title><link>https://www.safjan.com/10-scikit-learn-exercises-for-aspiring-data-scientists/</link><description>&lt;p&gt;summary&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 13 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-13:/10-scikit-learn-exercises-for-aspiring-data-scientists/</guid><category>note</category><category>machine-learning</category><category>learning</category><category>scikit-learn</category></item><item><title>Learning Bayesian methods as Data Scientist</title><link>https://www.safjan.com/learning-bayesian-methods-as-data-scientist/</link><description>&lt;p&gt;summary&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 13 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-13:/learning-bayesian-methods-as-data-scientist/</guid><category>note</category><category>machine-learning</category><category>bayesian</category><category>learning</category></item><item><title>How to Detect ChatGPT-Generated Text?</title><link>https://www.safjan.com/detection-of-texts-generated-by-large-language-models-like-chatgpt/</link><description>&lt;p&gt;Discover the latest methods for distinguishing machine-generated text from the human-written text. Learn about statistical, syntactic, semantic, and neural network-based approaches. Stay up-to-date with the latest research in NLP and AI.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 11 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-11:/detection-of-texts-generated-by-large-language-models-like-chatgpt/</guid><category>Machine Learning</category><category>NLP</category><category>machine-learning</category><category>ChatGPT</category><category>BERT</category><category>Adversarial-networks</category><category>GAN</category></item><item><title>What is the difference between Matthews correlation coefficient and F1 metrics</title><link>https://www.safjan.com/difference-between-matthews-and-f1/</link><description>&lt;p&gt;Description of the difference between Matthews correlation coefficient and F1&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 05 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-05:/difference-between-matthews-and-f1/</guid><category>note</category><category>machine-learning</category><category>classification</category><category>metrics</category></item><item><title>Difference between numba jit and njit decorators</title><link>https://www.safjan.com/difference-between-numba-jit-and-njit-decorators/</link><description>&lt;p&gt;Description of the difference between jit and njit numba decorators&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 05 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-05:/difference-between-numba-jit-and-njit-decorators/</guid><category>note</category><category>python</category><category>numba</category></item><item><title>Maximizing Efficiency in MLOps: How Blue/Green Deployment Can Help?</title><link>https://www.safjan.com/blue-green-deployment-in-mlops/</link><description>&lt;p&gt;Learn about blue/green deployment in MLOps, its usefulness and when to use it, and the cost and complexity of maintaining two separate environments&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 03 Jan 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2023-01-03:/blue-green-deployment-in-mlops/</guid><category>MLOps</category><category>mlops</category><category>devops</category><category>machine-learning</category><category>deployment</category><category>production</category></item><item><title>Grammar of graphics explained like to 5 years old child.</title><link>https://www.safjan.com/grammar-of-graphics/</link><description>&lt;p&gt;Learn the difference between imperative &amp;amp; grammar of graphics approach to plotting. Imprerative approach is simple and easy to understand, but grammar of graphics approach is more advanced and efficient. Examples with matplotlib and plotly express included.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 10 Dec 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-12-10:/grammar-of-graphics/</guid><category>Howto</category><category>visualization</category><category>graphics</category><category>plotly</category></item><item><title>MLOps Certifications: A Comprehensive Guide</title><link>https://www.safjan.com/mlops-certifications-a-comprehensive-guide/</link><description>&lt;p&gt;Learn about popular MLOps certifications offered by Amazon, Google, and Microsoft. Understand if they are worth the effort and money and discover free MLOps certifications available to gain knowledge and understanding of the field.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sun, 27 Nov 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-11-27:/mlops-certifications-a-comprehensive-guide/</guid><category>MLOps</category><category>mlops</category><category>certificates</category><category>job-search</category><category>interview</category><category>machine-learning</category></item><item><title>Roles in MLOps</title><link>https://www.safjan.com/roles-in-mlops/</link><description>&lt;p&gt;Learn about the different roles in MLOps and the responsibilities of each role, including Model Deployment Engineer, Data pipeline Engineer, Model Monitoring Engineer, Model Governance Engineer, Machine Learning Infra Engineer and Machine Learning Platform Engineer.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 12 Nov 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-11-12:/roles-in-mlops/</guid><category>MLOps</category><category>mlops</category><category>devops</category><category>machine-learning</category><category>interview</category><category>job</category><category>job-search</category><category>roles</category></item><item><title>50 questions for MLOps engineer job interview</title><link>https://www.safjan.com/50-questions-for-MLOps-engineer-job-interview/</link><description>&lt;p&gt;Get ready for your next MLOps Engineer interview with our comprehensive list of 50+ questions. Covering topics like deployment, management, data pipeline, monitoring and more.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 02 Nov 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-11-02:/50-questions-for-MLOps-engineer-job-interview/</guid><category>MLOps</category><category>mlops</category><category>job</category><category>job-search</category><category>machine-learning</category><category>interview</category></item><item><title>MLOps roles of the future</title><link>https://www.safjan.com/mlops_roles_of_the_future/</link><description>&lt;p&gt;Discover the future of MLOps specializations, including Explainable AI/MLOps, Federated Learning/Edge MLOps, Reinforcement Learning/MLOps, AI/ML in IoT and IIoT, Model Explainability and Fairness.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 28 Oct 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-10-28:/mlops_roles_of_the_future/</guid><category>Howto</category><category>mlops</category><category>devops</category><category>machine-learning</category><category>interview</category><category>job</category><category>job-search</category><category>roles</category></item><item><title>Is MLOps a good career?</title><link>https://www.safjan.com/is-mlops-good-career/</link><description>&lt;p&gt;Is a career in MLOps right for you? Learn about the pros and cons of this growing field, including high demand, high earning potential, exciting work, and career growth opportunities.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 22 Oct 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-10-22:/is-mlops-good-career/</guid><category>MLOps</category><category>mlops</category><category>devops</category><category>machine-learning</category><category>interview</category><category>job</category><category>job-search</category><category>roles</category><category>career</category></item><item><title>Tutorial - Install Calibre web on QNAP NAS</title><link>https://www.safjan.com/install-calibre-web-qnap-nas-tutorial/</link><description>&lt;p&gt;Calibre-Web is a web app providing a clean interface for browsing, reading, and downloading eBooks using a &lt;a href="https://calibre-ebook.com/"&gt;Calibre&lt;/a&gt; database.&lt;/p&gt;
&lt;p&gt;This tutorial shows how to install &lt;a href="https://github.com/janeczku/calibre-web"&gt;calibre-web&lt;/a&gt; on QNAP-NAS. &lt;/p&gt;
&lt;p&gt;&lt;img alt="main screen of calibre-web" src="https://github.com/janeczku/calibre-web/wiki/images/main_screen.png"&gt;&lt;/p&gt;
&lt;p&gt;The installation described here was done on TS-251+ (Celeron J1900 4 Cores) but should …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 12 Oct 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-10-12:/install-calibre-web-qnap-nas-tutorial/</guid><category>note</category><category>calibre</category><category>calibre-web</category><category>docker</category></item><item><title>Visual Text Exploration as Part of Preprocessing Before Classification</title><link>https://www.safjan.com/visual-text-exploration-as-part-of-preprocessing-before-classification/</link><description>&lt;p&gt;This post discusses importance of visual text exploration in preprocessing for classification, covers techniques (wordcloud, Sentiment Analysis, topic modeling, data cleaning) &amp;amp; how to use them with popular libraries. Encourages readers to try for own projects.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 11 Oct 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-10-11:/visual-text-exploration-as-part-of-preprocessing-before-classification/</guid><category>Machine Learning</category><category>NLP</category><category>python</category></item><item><title>10 Lesser-known, yet powerful python plotting libraries</title><link>https://www.safjan.com/lesser-known-yet-powerful-python-plotting-libraries/</link><description>&lt;p&gt;The most widely used libraries for plotting in python are matplotlib, Plotly, seaborn, and bokeh. This article describes 10 other powerful plotting libraries available in Python that can be used to create high-quality plots and visualizations.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 30 Sep 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-09-30:/lesser-known-yet-powerful-python-plotting-libraries/</guid><category>Howto</category><category>python</category><category>plotting</category><category>visualization</category></item><item><title>Automated signal segmentation, trend detection, and classification</title><link>https://www.safjan.com/automated-trend-detection-and-signal-segmentation/</link><description>&lt;p&gt;This post presents the trend-classifier package that can be used for signal segmentation into parts where the trend is coherent.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 12 Sep 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-09-12:/automated-trend-detection-and-signal-segmentation/</guid><category>Howto</category><category>trend</category><category>segmentation</category><category>algotrading</category></item><item><title>Write a syslog entry from a bash script</title><link>https://www.safjan.com/write-a-syslog-entry-from-a-bash-script/</link><description>&lt;p&gt;Instruction on how to write a message to system log from the bash script using logger-utility&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 02 Sep 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-09-02:/write-a-syslog-entry-from-a-bash-script/</guid><category>note</category><category>bash</category><category>log</category><category>logging</category><category>syslog</category></item><item><title>How to convert HTML to clean markdown</title><link>https://www.safjan.com/how-to-convert-html-to-clean-markdown/</link><description>&lt;p&gt;Instruction on how to convert HTML document to markdown with cleaning the output from the clutter.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 31 Aug 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-08-31:/how-to-convert-html-to-clean-markdown/</guid><category>note</category><category>html</category><category>markdown</category><category>pandoc</category><category>conversion</category><category>cli</category><category>grep</category><category>sed</category></item><item><title>The Best Self-Hosted, Open Source RSS Feed Readers in 2022</title><link>https://www.safjan.com/the-best-self-hosted-rss-feed-readers-in-2022/</link><description>&lt;p&gt;Best self-hosted RSS Feed Readers selected by popularity and project activity.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 31 Aug 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-08-31:/the-best-self-hosted-rss-feed-readers-in-2022/</guid><category>Howto</category><category>rss</category><category>news</category><category>feed-reader</category><category>self-hosted</category></item><item><title>List unlinked (orphaned) notes in Obsidian</title><link>https://www.safjan.com/list-unlinked-orphaned-notes-obsidian/</link><description>&lt;p&gt;Here is how you can create dynamic list of unlinked notes (files) using dataview&lt;/p&gt;
&lt;pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;LIST FROM &amp;quot;&amp;quot;
WHERE length(file.inlinks) = 0 AND length(file.outlinks) = 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/pre&gt;

&lt;p&gt;Credits to &lt;a href="https://forum.obsidian.md/u/riddyrayes/summary"&gt;riddyrayes&lt;/a&gt; for the solution posted on obsidian forum &lt;a href="https://forum.obsidian.md/t/find-orphan-notes/817/15"&gt;Find orphan notes - Feature archive - Obsidian …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 17 Aug 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-08-17:/list-unlinked-orphaned-notes-obsidian/</guid><category>note</category><category>obsidian</category><category>obsidian/dataview</category><category>orphaned-notes</category></item><item><title>Reading CSV with Obsidian dataview and dataviewjs</title><link>https://www.safjan.com/reading-csv-with-obsidian-dataview-dataviewjs/</link><description>&lt;p&gt;The &lt;a href="https://github.com/blacksmithgu/obsidian-dataview"&gt;obsidian-dataview&lt;/a&gt; plugin allows reading data from the notes in the vault and data files such as CSV. Both &lt;code&gt;dataview&lt;/code&gt; and &lt;code&gt;dataviewjs&lt;/code&gt; can be used for that purpose. I'm more fluent in using &lt;code&gt;dataview&lt;/code&gt; therefore I will dedicate more space to this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 16 Aug 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-08-16:/reading-csv-with-obsidian-dataview-dataviewjs/</guid><category>note</category><category>obsidian</category><category>obsidian/dataview</category><category>obsidian/dataviewjs</category><category>csv</category></item><item><title>Install Photoprism on QNAP NAS using Docker Compose</title><link>https://www.safjan.com/install-photoprism-on-qnap-nas-using-docker-compose/</link><description>&lt;p&gt;Instruction on how to install Photoprism on QNAP NAS using Docker Compose&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 08 Aug 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-08-08:/install-photoprism-on-qnap-nas-using-docker-compose/</guid><category>note</category><category>nas</category><category>photoprism</category><category>Linux</category><category>photo-gallery</category><category>docker</category><category>docker-compose</category><category>qnap</category></item><item><title>Trading algorithms and trading strategies</title><link>https://www.safjan.com/trading-algorithms/</link><description>&lt;p&gt;This note contains a collection of trading algorithms or links to algorithms&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 27 Jun 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-06-27:/trading-algorithms/</guid><category>note</category><category>finance/algotrading</category><category>finance/crypto</category><category>algorithm</category><category>trading</category><category>strategies</category><category>finance</category></item><item><title>Lesser Known Backtesting Libraries</title><link>https://www.safjan.com/lesser-known-backtesting-libraries/</link><description>&lt;p&gt;This article presents a set of lesser-known but interesting libraries that can be used for backtesting trading strategies and trading algorithms in general.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sun, 05 Jun 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-06-05:/lesser-known-backtesting-libraries/</guid><category>Algorithmic Trading</category><category>trading</category><category>backtesting</category><category>crypto</category><category>algorithmic-trading</category><category>algotrading</category><category>quant</category></item><item><title>Append JSON data to file, save the traces</title><link>https://www.safjan.com/append-json-data-to-file-save-traces/</link><description>&lt;h2&gt;The JSON Lines standard&lt;/h2&gt;
&lt;p&gt;Sometimes there is a need to store data in JSON format but simultaneously append data to files when new data arrive. JSON format stores data, on the top level, like a dictionary or a list it is not …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-06-03:/append-json-data-to-file-save-traces/</guid><category>note</category><category>append-json</category><category>data</category><category>json</category><category>trace</category><category>jsonlines</category><category>python</category></item><item><title>Bash - determine if script runs on Linux, macOS or other system</title><link>https://www.safjan.com/bash-determine-if-linux-or-macos/</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;unameOut&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;uname&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;unameOut&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;Linux*&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nv"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Linux&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;Darwin*&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Mac&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;CYGWIN*&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Cygwin&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;MINGW*&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nv"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;MinGw&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;*&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nv"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;UNKNOWN:&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;unameOut&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;machine&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$machine&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mac&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# code for macOS platform        &lt;/span&gt;
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;expr&lt;span class="w"&gt; &lt;/span&gt;substr&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;uname&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Linux&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# code …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-06-03:/bash-determine-if-linux-or-macos/</guid><category>note</category><category>bash</category><category>determine</category><category>Linux</category><category>macos</category></item><item><title>Reinstall frequently</title><link>https://www.safjan.com/reinstall-os-frequently/</link><description>&lt;p&gt;Once, when looking for macOS brew install automation I stumbled upon &lt;a href="https://gist.github.com/izikeros/d4a8a6a7b8fa267f2b4fd6c1fbd6a08e"&gt;gist&lt;/a&gt; that has strange, counterintuitive advice: "Reinstall frequently". But in curse of time and experience I was more and more convinced by that idea. Both for system restore and resuming projects …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 03 Jun 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-06-03:/reinstall-os-frequently/</guid><category>note</category><category>reinstall</category><category>automation</category><category>scripts</category><category>backup</category></item><item><title>Bash - encode, decode base64 and hex</title><link>https://www.safjan.com/bash-encode-decode-base64-and-hex/</link><description>&lt;h2&gt;Tools&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;xxd&lt;/code&gt; - make a hexdump or do the reverse.
&lt;code&gt;base64&lt;/code&gt; - base64 encode/decode data and print to standard output&lt;/p&gt;
&lt;h2&gt;Encode hex&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xxd&lt;span class="w"&gt; &lt;/span&gt;-p
68656c6c6f0a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Decode hex&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;68656c6c6f0a&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xxd&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;-p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Encode base64&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;base64
aGVsbG8K
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Decode base64&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 20 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-20:/bash-encode-decode-base64-and-hex/</guid><category>note</category><category>base64</category><category>bash</category><category>decode</category><category>encode</category><category>hex</category></item><item><title>Auto documented makefile</title><link>https://www.safjan.com/auto-documented-makefile/</link><description>&lt;p&gt;X::[[make]]&lt;/p&gt;
&lt;p&gt;When working on large projects, it can be challenging to keep track of all the different make targets and their purposes. Fortunately, there's a solution to this problem: an auto-documented makefile. With this approach, you can add help information to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/auto-documented-makefile/</guid><category>note</category><category>auto-documented</category><category>makefile</category><category>documentation</category><category>help</category><category>make-help</category></item><item><title>Awk</title><link>https://www.safjan.com/awk/</link><description>&lt;h2&gt;Validate CSV number of fields:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;awk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;BEGIN{FS=&amp;quot;,&amp;quot;;x=1}{x++}NF!=3{print &amp;quot;wrong number of fields:&amp;quot; NF &amp;quot; in line:&amp;quot; x; exit}&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;valid.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;test data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a,b,c\n1,2,3\n11,12,13,14\n21,22,23&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;invalid …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/awk/</guid><category>note</category><category>awk</category><category>gawk</category><category>mawk</category><category>snippet</category><category>software/alternatives</category><category>Linux</category></item><item><title>Bash - file base name (without extension)</title><link>https://www.safjan.com/bash-base-name-without-extension/</link><description>&lt;h2&gt;file base name (without extension)&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;movie.mp4&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;basename&lt;/span&gt;&lt;span class="p"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;/.mp4&lt;/span&gt;&lt;span class="si"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Get the current directory name (without full path) in a Bash script&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;result&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="p"&gt;##*/&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="c1"&gt;# to assign to a variable&lt;/span&gt;

&lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%s\n&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="p"&gt;##*/&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# to print to stdout&lt;/span&gt;
&lt;span class="w"&gt;                           &lt;/span&gt;&lt;span class="c1"&gt;# ...more robust than …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/bash-base-name-without-extension/</guid><category>note</category><category>base</category><category>basename</category><category>bash</category><category>extension</category><category>name</category><category>bash/basename</category></item><item><title>Bash - coloring output</title><link>https://www.safjan.com/bash-coloring/</link><description>&lt;h1&gt;Bash coloring&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Text color variables&lt;/span&gt;
&lt;span class="nv"&gt;txtund&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput&lt;span class="w"&gt; &lt;/span&gt;sgr&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="c1"&gt;# Underline&lt;/span&gt;
&lt;span class="nv"&gt;txtbld&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput&lt;span class="w"&gt; &lt;/span&gt;bold&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="c1"&gt;# Bold&lt;/span&gt;
&lt;span class="nv"&gt;bldred&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;txtbld&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput&lt;span class="w"&gt; &lt;/span&gt;setaf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#  red&lt;/span&gt;
&lt;span class="nv"&gt;bldblu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;txtbld&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput&lt;span class="w"&gt; &lt;/span&gt;setaf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#  blue&lt;/span&gt;
&lt;span class="nv"&gt;bldwht&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;txtbld&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput&lt;span class="w"&gt; &lt;/span&gt;setaf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#  7-gray, 15-white&lt;/span&gt;
&lt;span class="nv"&gt;bldorg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;txtbld&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput&lt;span class="w"&gt; &lt;/span&gt;setaf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#  orange&lt;/span&gt;
&lt;span class="nv"&gt;txtrst&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tput …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/bash-coloring/</guid><category>note</category><category>bash</category><category>coloring</category><category>cli</category><category>tui</category></item><item><title>Bash - continue: yes or no</title><link>https://www.safjan.com/bash-continue-yes-no/</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;do_backup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;y&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="c1"&gt;# In batch mode =&amp;gt; Default is Yes&lt;/span&gt;
&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="c1"&gt;# If TTY =&amp;gt; Prompt the question&lt;/span&gt;
&lt;span class="nb"&gt;read&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;\e[1;32m&lt;/span&gt;
&lt;span class="s1"&gt;Continue with backup? (Y/n)\e[0m &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;do_backup&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# Store the answer in $do_xxxx&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$do_backup&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~&lt;span class="w"&gt; &lt;/span&gt;^&lt;span class="o"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;|&lt;/span&gt;Y&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# Do if …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/bash-continue-yes-no/</guid><category>note</category><category>bash</category><category>bash-continue-yes-no</category><category>continue</category></item><item><title>Bash - default argument for the script</title><link>https://www.safjan.com/bash-default-argument/</link><description>&lt;p&gt;See the example of &lt;code&gt;somecommand.sh&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="nv"&gt;ARG1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="nv"&gt;foo&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;ARG2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;2&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="nv"&gt;bar&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;ARG3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;3&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;ARG4&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;4&lt;/span&gt;&lt;span class="k"&gt;:-$(&lt;/span&gt;date&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ARG1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ARG2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ARG3&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ARG4&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here are some examples of how this works:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;./somecommand.sh
foo
bar …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/bash-default-argument/</guid><category>note</category><category>default-argument</category><category>bash</category></item><item><title>Bash - download gist from GitHub</title><link>https://www.safjan.com/bash-download-gist-from-github/</link><description>&lt;h2&gt;Download, output content to stdout&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl&lt;span class="w"&gt; &lt;/span&gt;-L&lt;span class="w"&gt; &lt;/span&gt;https://gist.githubusercontent.com/izikeros/937b05e81b5dca81d3daf309ea6bad20/raw/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Download, and save the output to file &lt;code&gt;my_file&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl -L https://gist.githubusercontent.com/izikeros/937b05e81b5dca81d3daf309ea6bad20/raw/ -o my_file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# curl options to use&lt;/span&gt;
curl&lt;span class="w"&gt; &lt;/span&gt;-LJO
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Options (excepts from …&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/bash-download-gist-from-github/</guid><category>note</category><category>bash</category><category>download</category><category>gist</category><category>github</category></item><item><title>Black - keep single quotes for strings</title><link>https://www.safjan.com/black-keep-single-quotes-strings/</link><description>&lt;p&gt;See: &lt;a href="https://github.com/psf/black/issues/594"&gt;Add --single-quote option · Issue #594 · psf/black · GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Currently, it requires everyone who uses single quotes to run black and then have a second tool (we use pre-commit double-quote-string-fixer) to ensure that single quotes are being used consistently.&lt;/p&gt;
&lt;p&gt;From black documentation …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/black-keep-single-quotes-strings/</guid><category>note</category><category>black</category><category>single-string</category><category>quotation-mark</category></item><item><title>Change the character encoding</title><link>https://www.safjan.com/change-character-encoding/</link><description>&lt;p&gt;convert file &lt;code&gt;iconv.src&lt;/code&gt; from &lt;code&gt;iso-8859-1&lt;/code&gt; to &lt;code&gt;utf-8&lt;/code&gt; and save to &lt;code&gt;/tmp/iconv.out&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;iconv&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;iso-8859-1&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;utf-8&lt;span class="w"&gt; &lt;/span&gt;iconv.src&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;/tmp/iconv.out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/change-character-encoding/</guid><category>note</category><category>change</category><category>convert</category><category>text</category><category>character</category><category>encoding</category><category>iconv</category><category>utf-8</category><category>Linux</category></item><item><title>Check text file encoding</title><link>https://www.safjan.com/check-text-file-encoding/</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;file&lt;span class="w"&gt; &lt;/span&gt;-bi&lt;span class="w"&gt; &lt;/span&gt;en_CA_utf8.aff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/check-text-file-encoding/</guid><category>note</category><category>encoding</category><category>file</category><category>text</category><category>Linux</category></item><item><title>Chocolatey (Windows)</title><link>https://www.safjan.com/chocolatey/</link><description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; 
there is already an official tool from Microsoft for downloading and upgrading software as packages: [[winget]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;install&lt;/h2&gt;
&lt;h3&gt;Step 1 — Opening and Configuring PowerShell&lt;/h3&gt;
&lt;p&gt;Open Powershell as admin&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;~
&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;type: RemoteSigned&amp;quot;&lt;/span&gt;
Set-ExecutionPolicy&lt;span class="w"&gt; &lt;/span&gt;-Scope&lt;span class="w"&gt; &lt;/span&gt;CurrentUser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;RemoteSigned
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;confirm with &lt;code&gt;Y&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Confirmation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;Get-ExecutionPolicy …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/chocolatey/</guid><category>note</category><category>chocolatey</category><category>windows</category><category>packages</category><category>winget</category></item><item><title>Convert markdown to pdf</title><link>https://www.safjan.com/convert-markdown-to-pdf/</link><description>&lt;p&gt;X::[[pandoc]]
X::[[writing_book_or_ebook_using_pandoc]]&lt;/p&gt;
&lt;h2&gt;Without ToC&lt;/h2&gt;
&lt;p&gt;convert with &lt;a href="https://pandoc.org/"&gt;Pandoc&lt;/a&gt; to PDF&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--from&lt;span class="o"&gt;=&lt;/span&gt;markdown&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--standalone&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--to&lt;span class="o"&gt;=&lt;/span&gt;pdf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--pdf-engine&lt;span class="o"&gt;=&lt;/span&gt;xelatex&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--output&lt;span class="o"&gt;=&lt;/span&gt;book.pdf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--metadata&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;My booklet&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;With ToC&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# convert to HTML&lt;/span&gt;
pandoc&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--from&lt;span class="o"&gt;=&lt;/span&gt;markdown&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--standalone&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--to&lt;span class="o"&gt;=&lt;/span&gt;html&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--output&lt;span class="o"&gt;=&lt;/span&gt;book.html&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--metadata&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;title …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/convert-markdown-to-pdf/</guid><category>note</category><category>conversion</category><category>markdown</category><category>pdf</category><category>pandoc</category><category>wkhtmltopdf</category><category>html</category></item><item><title>Convert PDF document to image</title><link>https://www.safjan.com/convert-pdf-to-image/</link><description>&lt;ul&gt;
&lt;li&gt;convert&lt;/li&gt;
&lt;li&gt;image&lt;/li&gt;
&lt;li&gt;pdf&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;install poppler-utils&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# on Ubuntu, Debian Linux:
sudo apt install poppler-utils

# on macOS
brew install poppler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;convert&lt;/h2&gt;
&lt;p&gt;To convert the entire PDF into PNG format, run the command below. In this case, our PDF file is document.pdf&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pdftoppm&lt;span class="w"&gt; &lt;/span&gt;-png …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/convert-pdf-to-image/</guid><category>note</category></item><item><title>How to delete a Git branch locally and remotely?</title><link>https://www.safjan.com/git-delete-branch/</link><description>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Git is a powerful tool for version control, and it is widely used by developers to keep track of changes in their code. One of the key features of Git is the ability to create and manage branches, which allows developers …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/git-delete-branch/</guid><category>note</category><category>branch</category><category>delete</category><category>git</category></item><item><title>Man alternatives, CLI command usage explanations, and cheatsheets</title><link>https://www.safjan.com/man-alternatives-usage-explanations-and-cheatsheets/</link><description>&lt;h2&gt;&lt;a href="https://tldr.sh/"&gt;tldr&lt;/a&gt; &lt;img alt="GitHub stars" src="https://img.shields.io/github/stars/tldr-pages/tldr.svg?logo=github"&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Simplified and community-driven man pages&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;code&gt;tldr&lt;/code&gt; pages are a community effort to simplify the beloved &lt;a href="https://en.wikipedia.org/wiki/Man_page"&gt;man pages&lt;/a&gt; with practical examples.&lt;img alt="tldr" src="https://tldr.sh/assets/img/screenshot.png"&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://github.com/cheat/cheat"&gt;cheat&lt;/a&gt;&lt;img alt="GitHub stars" src="https://img.shields.io/github/stars/cheat/cheat.svg?logo=github"&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;cheat&lt;/code&gt; allows you to create and view interactive cheatsheets on the command-line. It was designed to help remind *nix …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/man-alternatives-usage-explanations-and-cheatsheets/</guid><category>note</category><category>software/alternatives</category><category>cheatsheet</category><category>man</category><category>someday</category><category>rofi</category><category>cli</category></item><item><title>Pytest check if lists are equal</title><link>https://www.safjan.com/pytest-check-lists-equal/</link><description>&lt;p&gt;In the assertions this can be useful to check if two lists are equal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;check_lists_equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;list_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Check if two lists are equal.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/pytest-check-lists-equal/</guid><category>note</category><category>pytest</category><category>python</category><category>assert</category></item><item><title>How to ignore warnings in Python</title><link>https://www.safjan.com/python-ignore-warnings/</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;warnings&lt;/span&gt;
&lt;span class="n"&gt;warnings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filterwarnings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;up::[[MOC_Python]]
X::[[python_warnings]]&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-05-12:/python-ignore-warnings/</guid><category>note</category><category>python/warning/ignore</category><category>python</category></item><item><title>Pandas dataframe schema and data types validation</title><link>https://www.safjan.com/pandas-dataframe-validation/</link><description>&lt;h1&gt;Contents&lt;/h1&gt;
&lt;!-- MarkdownTOC levels='2,3' autolink=True autoanchor=True --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#pandera-515-stars---column-validation-columns-types-dataframe-schema"&gt;Pandera (515 stars) - column validation (columns, types), DataFrame Schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dataenforce-59-stars---columns-presence-validation"&gt;Dataenforce (59 stars) - columns presence validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#for-type-hinting-column-names-check-dtype-check"&gt;for type hinting (column names check, dtype check)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#to-enforce-validation-at-runtime"&gt;to enforce validation at runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#great-expectations---data-validation"&gt;Great expectations - data validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#automated-expectations-from-profiling"&gt;automated expectations from profiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pandas_schema-135-stars"&gt;pandas_schema (135 stars)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-data-validation-libraries"&gt;Other Data …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-27:/pandas-dataframe-validation/</guid><category>note</category><category>pandas</category><category>pandas/schema</category><category>pandas/validation</category><category>pandera</category><category>dataenforce</category><category>software/alternatives</category><category>great-expectations</category></item><item><title>Serve HTTP files with python server</title><link>https://www.safjan.com/serve-http-files-with-python-server/</link><description>&lt;p&gt;up::[[python]]&lt;/p&gt;
&lt;p&gt;Sometimes there is a need to serve HTML page instead of just displaying it in the browser:
- share content with others (allowing download)
- serve HTTP document with javascript when javascript can't be read due to CORS limitations.&lt;/p&gt;
&lt;p&gt;From the directory …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 27 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-27:/serve-http-files-with-python-server/</guid><category>note</category><category>python</category><category>htttp</category><category>server</category><category>javascript</category></item><item><title>Change extension for multiple files in Zsh</title><link>https://www.safjan.com/change-extension-for-multiple-files-in-zsh/</link><description>&lt;p&gt;In Zsh it is a bit easier to perform this because of using &lt;code&gt;zmv&lt;/code&gt;. First, you need to load &lt;code&gt;zmv&lt;/code&gt;. In zsh, run the following command once (or put them in your ~/.zshrc for the future):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;autoload&lt;span class="w"&gt; &lt;/span&gt;-U&lt;span class="w"&gt; &lt;/span&gt;zmv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;change all extensions …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 22 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-22:/change-extension-for-multiple-files-in-zsh/</guid><category>note</category><category>zsh</category><category>shell</category><category>zmv</category></item><item><title>Use python TypedDict to type hint dictionaries</title><link>https://www.safjan.com/use-python-typeddict-to-type-hint-dictionaries/</link><description>&lt;p&gt;Define types for the fields in a dictionary using TypedDict as a base class to inherit from and then use this class in hints.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TypedDict&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NameInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TypedDict&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
    &lt;span class="n"&gt;first_letter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;NameInfo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 22 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-22:/use-python-typeddict-to-type-hint-dictionaries/</guid><category>note</category><category>python</category><category>type-hints</category><category>TypedDict</category></item><item><title>Zsh - loop over files and run command</title><link>https://www.safjan.com/zsh-loop-over-files-and-run-command/</link><description>&lt;p&gt;up::[[MOC_Shell_Bash_Zsh]]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;~/folder/*&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;gpg&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;from: https://quintussential.com/archive/2019/01/26/Looping-over-files-in-zsh/&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 22 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-22:/zsh-loop-over-files-and-run-command/</guid><category>note</category><category>zsh</category><category>loop</category></item><item><title>Allow arbitrary types (such as Pandas Dataframe) in Pydantic</title><link>https://www.safjan.com/allow-arbitrary-types-pandas-in-pydantic/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 21 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-21:/allow-arbitrary-types-pandas-in-pydantic/</guid><category>note</category><category>pydantic</category><category>pandas</category><category>type-hints</category></item><item><title>Python - configuration management</title><link>https://www.safjan.com/python-configuration-management/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 14 Apr 2022 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-04-14:/python-configuration-management/</guid><category>note</category><category>python</category><category>configuration</category><category>hydra</category><category>decouple</category></item><item><title>Clone partition in Linux</title><link>https://www.safjan.com/clone-partition-in-linux/</link><description>&lt;p&gt;how to clone disk partition in Linux&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 03 Mar 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-03-03:/clone-partition-in-linux/</guid><category>note</category><category>Linux</category><category>dd</category><category>pv</category><category>partition</category><category>disk</category></item><item><title>Adding Parent Directory To Python Path</title><link>https://www.safjan.com/python-add-parent-directory-to-path/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 22 Feb 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-02-22:/python-add-parent-directory-to-path/</guid><category>note</category><category>python</category><category>gist</category><category>snippet</category><category>jupyter</category><category>notebook</category></item><item><title>Python - get file and path parts (dirname, base name, extension)</title><link>https://www.safjan.com/python-get-file-and-path-parts-dirname-base-name-extension/</link><description>&lt;p&gt;To split the full file name (e.g. &lt;code&gt;/root/dir/sub/file.ext&lt;/code&gt;) with a path into various parts you can use python built-in functions from the &lt;code&gt;os&lt;/code&gt; module.
You can retrieve:
- base name - just file name with extension (in our example …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 15 Feb 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-02-15:/python-get-file-and-path-parts-dirname-base-name-extension/</guid><category>note</category><category>base name</category><category>dir-name</category><category>file extension</category><category>path</category><category>python</category></item><item><title>Most Popular Python Backtesting Libraries</title><link>https://www.safjan.com/popular-backtesting-libraries/</link><description>&lt;p&gt;Popular backtesting libraries with stars as popularity indicators.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 11 Feb 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-02-11:/popular-backtesting-libraries/</guid><category>note</category><category>trading</category><category>crypto</category><category>backtesting</category><category>finance/crypto</category><category>finance/algotrading</category><category>algorithmic-trading</category><category>finance</category><category>popularity</category><category>zipline</category><category>quant</category></item><item><title>15 tools for document Deskewing and Dewarping</title><link>https://www.safjan.com/tools-for-doc-deskewing-and-dewarping/</link><description>&lt;p&gt;Sometimes input for document processing tasks such as OCR, table detection or text segmentation can be scanned or photo taken from hand that do not have ideal perspective - is rotated or spatially distorted in some way (warped document). If you are looking for my recommendations go straight to the last section of this article "Summary and recommendations".&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 11 Feb 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-02-11:/tools-for-doc-deskewing-and-dewarping/</guid><category>Data Science</category><category>document intelligence</category><category>document processing</category><category>computer vision</category><category>digital image processing</category><category>canny edge detector</category><category>hough transform</category><category>deep learning</category></item><item><title>Datasets for sentiment analysis</title><link>https://www.safjan.com/datasets-for-sentiment-analysis/</link><description>&lt;ul&gt;
&lt;li&gt;McAuley and Leskovec (2013) (Reviews)&lt;/li&gt;
&lt;li&gt;McAuley and Leskovec (2013) (Review Titles)&lt;/li&gt;
&lt;li&gt;Yelp Academic Dataset&lt;/li&gt;
&lt;li&gt;Maas et al. (2011)&lt;/li&gt;
&lt;li&gt;Kaggle&lt;/li&gt;
&lt;li&gt;Pang and Lee (2005)&lt;/li&gt;
&lt;li&gt;Nakov et al. (2013)&lt;/li&gt;
&lt;li&gt;Shamma (2009)&lt;/li&gt;
&lt;li&gt;Blitzer et al. (2007) (Books)&lt;/li&gt;
&lt;li&gt;Blitzer et al. (2007) (DVDs)&lt;/li&gt;
&lt;li&gt;Blitzer et al …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 25 Jan 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-01-25:/datasets-for-sentiment-analysis/</guid><category>note</category><category>sentiment-analysis</category><category>machine-learning</category><category>AI</category><category>NLP</category></item><item><title>How to get most of GitHub Copilot</title><link>https://www.safjan.com/how-to-get-most-of-github-copilot/</link><description>&lt;p&gt;This post describes techniques that help to get most accurate suggestions from the GitHub Copilot "Your AI pair programmer". For those who never heard of Copilot there is short introduction, if you already know Copilot - you can jump directly to section 4: "How to get most of GitHub Copilot".&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 25 Jan 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2022-01-25:/how-to-get-most-of-github-copilot/</guid><category>Howto</category><category>github</category><category>coding</category><category>ai</category></item><item><title>Understanding Micro and Macro Averages in Multiclass Multilabel Problems</title><link>https://www.safjan.com/micro-and-macro-averages-in-multiclass-multilabel-problems/</link><description>&lt;p&gt;Learn about micro and macro averages in multiclass multilabel problems, the difference between multiclass and multilabel problems and when to use micro and macro averages.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 22 Dec 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-12-22:/micro-and-macro-averages-in-multiclass-multilabel-problems/</guid><category>Machine Learning</category><category>classification</category><category>metrics</category></item><item><title>Git - delete branches that are merged into the main branch</title><link>https://www.safjan.com/git-delete-branches-merged-into-main-branch/</link><description>&lt;!-- MarkdownTOC levels='2,3' autolink=True autoanchor=True --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#first---fetch-and-prune"&gt;First - fetch and prune&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-do-i-clean-outdated-branches"&gt;How Do I Clean Outdated Branches?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#does-git-remote-prune-origin-delete-the-local-branch"&gt;Does Git Remote Prune Origin Delete the Local Branch?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#second---delete-merged-local-branches"&gt;Second - delete merged local branches&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /MarkdownTOC --&gt;

&lt;p&gt;When actively developing feature branches that are later merged into develop branch you might end up with a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 16 Dec 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-12-16:/git-delete-branches-merged-into-main-branch/</guid><category>note</category><category>branch</category><category>delete</category><category>git</category><category>merged</category></item><item><title>Setup VS Code as NIM IDE</title><link>https://www.safjan.com/vscode-as-nim-ide/</link><description>&lt;p&gt;Learn how to set up VSCode as a Nim IDE from scratch. Includes instructions for downloading VSCode, installing the Nim extension, configuring settings, and debugging Nim code.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 02 Dec 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-12-02:/vscode-as-nim-ide/</guid><category>Howto</category><category>nim</category><category>ide</category><category>programming</category><category>vscode</category><category>debugging</category><category>nimrod</category></item><item><title>Black - the code formatter</title><link>https://www.safjan.com/black-code-formatter/</link><description>&lt;p&gt;notes on using black formatter&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 29 Nov 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-11-29:/black-code-formatter/</guid><category>note</category><category>black</category><category>python</category><category>pyqa</category><category>quality</category></item><item><title>Top popular Zsh plugins on GitHub (2021)</title><link>https://www.safjan.com/top-popular-zsh-plugins-on-github-2021/</link><description>&lt;p&gt;Explore the most popular Zsh plugins from the 1800+ options on the Awesome Zsh plugins GitHub project. See which ones have the highest number of stars from the Zsh community.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 29 Nov 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-11-29:/top-popular-zsh-plugins-on-github-2021/</guid><category>Linux</category><category>zsh</category><category>scrapping</category><category>python</category><category>Linux</category></item><item><title>Git hooks</title><link>https://www.safjan.com/git-hooks/</link><description>&lt;p&gt;Example of how to set up git hooks manually or with pre-commit tool&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 20 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-20:/git-hooks/</guid><category>note</category><category>git</category><category>hooks</category><category>pre-commit_hooks</category><category>software/project</category><category>project</category></item><item><title>Time tracking apps</title><link>https://www.safjan.com/time-tracking-apps/</link><description>&lt;p&gt;In professional work both in corporation or as freelancer there might be a need to track - how much time you spent on different activities. There are already good apps that helps with that.&lt;/p&gt;
&lt;h1&gt;Solution that works best for me&lt;/h1&gt;
&lt;h2&gt;GTime&lt;/h2&gt;
&lt;p&gt;Manually log …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 20 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-20:/time-tracking-apps/</guid><category>note</category><category>time tracking</category><category>time management</category><category>billing</category><category>tracing</category><category>monitoring time</category><category>monitoring productivity</category><category>monitoring</category><category>productivity</category></item><item><title>Add logo to notebook header cell</title><link>https://www.safjan.com/add-logo-to-notebook-header/</link><description>&lt;p&gt;Instruction on how to add a logo to notebook header cell to strengthen visual identification of the project&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 12 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-12:/add-logo-to-notebook-header/</guid><category>note</category><category>jupyter</category><category>howto</category><category>notebook</category><category>jupyter-notebook</category><category>project/logo</category><category>visual-identification</category><category>logo</category></item><item><title>Git add - stage changes in various ways</title><link>https://www.safjan.com/git-add/</link><description>&lt;p&gt;various options to stage git files with &lt;code&gt;git add&lt;/code&gt; command&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 12 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-12:/git-add/</guid><category>note</category><category>git</category></item><item><title>Pre-commit hooks</title><link>https://www.safjan.com/git-pre-commit-hooks/</link><description>&lt;p&gt;Pre-commit is a convenient framework to manage git hooks. Uses configuration in the yaml file, handle the installation of required hooks and tools.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 08 Oct 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-10-08:/git-pre-commit-hooks/</guid><category>note</category><category>best-practices</category><category>commit</category><category>git</category><category>GitHub</category><category>hooks</category><category>management</category><category>project</category></item><item><title>Python - convert docstring styles</title><link>https://www.safjan.com/python-convert-docstring-styles/</link><description>&lt;p&gt;Description of tools for converting docstring style in python code&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 29 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-29:/python-convert-docstring-styles/</guid><category>note</category><category>convert</category><category>docstring</category><category>python</category><category>style</category></item><item><title>Python - docstrings styles</title><link>https://www.safjan.com/python-docstrings-styles/</link><description>&lt;p&gt;Most popular conventions used in python docstrings and format support in various tools.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Wed, 29 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-29:/python-docstrings-styles/</guid><category>note</category><category>docstrings</category><category>python</category><category>style</category></item><item><title>Python - project documentation from the code with pdoc3</title><link>https://www.safjan.com/python-documentation-with-pdoc3/</link><description>&lt;p&gt;summary&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 28 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-28:/python-documentation-with-pdoc3/</guid><category>note</category><category>documentation</category><category>pdoc3</category><category>python</category><category>documentation-generator</category><category>sphinx</category></item><item><title>Git - autocommit on file changes</title><link>https://www.safjan.com/git-autocommit-on-file-changes/</link><description>&lt;p&gt;How to create automatically commits if any file in the watched folder was changed&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 14 Sep 2021 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-09-14:/git-autocommit-on-file-changes/</guid><category>note</category><category>git</category><category>autocommit</category><category>note-taking</category><category>notes</category><category>automatic</category><category>automation</category><category>git/autocommit</category></item><item><title>Finding Errors in Data - Data Validation</title><link>https://www.safjan.com/finding-errors-in-data/</link><description>&lt;p&gt;Explore methods to detect &amp;amp; fix errors in data, including validation, visualizations, statistical tests, cleaning techniques, machine learning &amp;amp; data quality tools. Get concise, easy to understand information with examples &amp;amp; links to external resources.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sun, 31 Jan 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-01-31:/finding-errors-in-data/</guid><category>Machine Learning</category><category>machine-learning</category><category>data-engineering</category><category>dataset</category><category>data-visualization</category><category>data-cleaning</category></item><item><title>Pandas Schema Validation</title><link>https://www.safjan.com/pandas-schema-validation/</link><description>&lt;p&gt;Overview of the available tools and methods for schema validation in pandas, examplary code snippets and recommendation for when to use given tool.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 16 Jan 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2021-01-16:/pandas-schema-validation/</guid><category>Data Science</category><category>pandas</category><category>python</category><category>pandas/schema</category></item><item><title>Evaluation of interpretability for Explainable AI</title><link>https://www.safjan.com/evaluation-of-interpretability-for-explainable-ai/</link><description>&lt;p&gt;Learn about the evaluation of interpretability in machine learning with this guide. Discover different levels and methods for assessing the explainability of models.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 05 Nov 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2020-11-05:/evaluation-of-interpretability-for-explainable-ai/</guid><category>Explainable AI</category><category>interpretability</category><category>xai</category><category>explainability</category><category>ai</category><category>machine-learning</category><category>model</category></item><item><title>Metrics Used to Compare Histograms</title><link>https://www.safjan.com/metrics-to-compare-histograms/</link><description>&lt;p&gt;Learn about metrics used to compare histograms with examples of how to calculate them in python. From Chi-Squared distance to Kullback-Leibler divergence and Earth Mover's distance. A comprehensive guide.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sun, 19 Jan 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2020-01-19:/metrics-to-compare-histograms/</guid><category>Machine Learning</category><category>histogram</category><category>statistics</category><category>machine-learning</category><category>statistical-tests</category><category>metrics</category><category>distance-metrics</category></item><item><title>Interactive plots for blogging</title><link>https://www.safjan.com/interactive-plots-for-blogging/</link><description>&lt;p&gt;Using Plotly, Bokeh and Altair for interactive visualizations in the blog posts.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 13 Sep 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-09-13:/interactive-plots-for-blogging/</guid><category>Exploring new ideas</category><category>python</category><category>jupyter</category><category>blogging</category><category>pelican</category><category>visualization</category><category>interactive</category><category>plotly</category><category>bokeh</category><category>altair</category></item><item><title>Data Science Command-line Tools</title><link>https://www.safjan.com/data-science-command-line-tools/</link><description>&lt;p&gt;Description of GNU utils and other less standard tools that helps with processing data from CLI or with shell scripts.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 23 Aug 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-08-23:/data-science-command-line-tools/</guid><category>Linux</category><category>machine learning</category><category>Linux</category></item><item><title>Finding the spy - post on Markov Chains and stochastic matrices</title><link>https://www.safjan.com/spy-catch/</link><description>&lt;p&gt;Using puzzle on tracing the high profile spy as excuse to showcase Markov Chains and demonstrate usage and properties e.g. Stationary distribution&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 10 Aug 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-08-10:/spy-catch/</guid><category>Exploring new ideas</category><category>python</category><category>jupyter</category><category>statistics</category><category>markov chains</category></item><item><title>Top popular Zsh plugins on GitHub (2019)</title><link>https://www.safjan.com/top-popular-zsh-plugins-on-github-2019/</link><description>&lt;p&gt;On the GitHub project &lt;a href="https://github.com/unixorn/awesome-zsh-plugins"&gt;Awesome Zsh plugins&lt;/a&gt; you can find 1700+ links to plugins, themes, and Zsh plugin managers/frameworks. The number of tools listed on that page is high and it is difficult to get orientation on which plugins gained already a good reputation from the Zsh users community. This post aims at identifying the most popular tools where popularity is measured by the number of stars that Github users added to a given plugin or tool.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sun, 14 Jul 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-07-14:/top-popular-zsh-plugins-on-github-2019/</guid><category>Linux</category><category>zsh</category><category>scrapping</category><category>python</category><category>Linux</category></item><item><title>Learn Bayesian methods in 4 steps - by reading and by doing</title><link>https://www.safjan.com/learn-bayesian-methods-in-4-steps-by-reading-and-by-doing/</link><description>&lt;p&gt;This post proposes a 4-step path for learning Bayesian methods. The first step is going through the book: "Bayesian methods for hackers", second, using complementary books for probability and statistics, the third, reading How to become a Bayesian in eight easy steps: and last, going through the book full of exercises: "Think Bayes".&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 09 Jul 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-07-09:/learn-bayesian-methods-in-4-steps-by-reading-and-by-doing/</guid><category>Howto</category><category>machine learning</category><category>statistics</category><category>probability</category><category>howto</category></item><item><title>Kaggle evaluation metrics used for regression problems</title><link>https://www.safjan.com/kaggle-evaluation-metrics-used-for-regression-problems/</link><description>&lt;p&gt;This post describe evaluation metrics used in Kaggle competitions where problem to solve is has regression nature. Eight different metrics are described, namely: Absolute Error (AE), Mean Absolute Error (MAE), Weighted Mean Absolute Error (WMAE), Pearson Correlation Coefficient, Spearman’s Rank Correlation, Root Mean Squared Error (RMSE), Root Mean Squared Logarithmic Error (RMSLE), Mean Columnwise Root Mean Squared Error (MCRMSE).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-02-16:/kaggle-evaluation-metrics-used-for-regression-problems/</guid><category>Data Science</category><category>machine learning</category><category>evaluation</category><category>metrics</category><category>model performance evaluation</category><category>Kaggle</category></item><item><title>How to install TensorFlow and Keras on Windows 10</title><link>https://www.safjan.com/how-to-install-tensorflow-and-keras-on-windows-10/</link><description>&lt;p&gt;Guide on how to install TensorFlow cpu-only version - the case for machines without GPU supporting CUDA. Step-by-step procedure starting from creating conda environment till testing if TensorFlow and Keras Works.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 17 Jan 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-01-17:/how-to-install-tensorflow-and-keras-on-windows-10/</guid><category>'Howto'</category><category>machine learning</category><category>tensorflow</category><category>howto</category></item><item><title>Darwin Approach to Traveling Salesman</title><link>https://www.safjan.com/darwin-approach-to-traveling-salesman/</link><description>&lt;p&gt;Can the evolutionary approach crash the problem that brute-forcing will last far more than the age of the universe? This post shows how to attack the Traveling Salesman Problem using Darwin's approach. I'm describing the evolution model and design decisions. See the animation of how the population was evolving through the epochs.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 12 Jan 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-01-12:/darwin-approach-to-traveling-salesman/</guid><category>Exploring new ideas</category><category>machine learning</category><category>evolutionary</category></item><item><title>How to organize Data Science project based on Jupyter notebook</title><link>https://www.safjan.com/how-to-organize-data-science-project-based-on-jupyter-notebook/</link><description>&lt;p&gt;Having several notebook-based projects behind you might result in a mess in the projects directory. Organize your Data Science project based on Jupyter notebooks in a way that one can navigate through it. Especially that "the one" will be most probably you in a few months time. To achieve that: keep your projects directory clean, name the project in a descriptive way and take care of the internal structure of the project.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 05 Jan 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2019-01-05:/how-to-organize-data-science-project-based-on-jupyter-notebook/</guid><category>Howto</category><category>jupyter</category><category>python</category><category>notebook</category><category>howto</category><category>machine learning</category><category>best practices</category><category>project management</category></item><item><title>What's cooking</title><link>https://www.safjan.com/whats-cooking/</link><description>&lt;p&gt;Exploratory Data Analysis of the Kaggle's "What's cooking" competition dataset to get understanding what kind of data we are dealing with and get intuition of existing dependencies.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 05 Apr 2018 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2018-04-05:/whats-cooking/</guid><category>Data Science</category><category>python</category><category>jupyter</category><category>kaggle</category><category>NLP</category><category>EDA</category><category>machine learning</category></item><item><title>Blockchain implementation</title><link>https://www.safjan.com/blockchain-implementation/</link><description>&lt;p&gt;Python implementation of blockchain in few lines of code.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 26 Mar 2018 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.safjan.com,2018-03-26:/blockchain-implementation/</guid><category>Exploring new ideas</category><category>blockchain</category><category>cryptocurrency</category><category>python</category><category>jupyter</category></item><item><title>Top popular Zsh plugins on GitHub</title><link>https://www.safjan.com/top-popular-zsh-plugins-on-github/</link><description>&lt;p&gt;There is an exhaustive but curated list of Zsh plugins posted on GitHub project Awesome Zsh plugins. You can find there 800+ links to plugins, themes and Zsh plugin managers/frameworks. Even though it is a collection of awesome stuff the number is a bit high get orientation which plugins gained already good reputation from Zsh users community. In this post I will identify most popular plugins - those which have the highest number of stars.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 22 Mar 2018 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:www.safjan.com,2018-03-22:/top-popular-zsh-plugins-on-github/</guid><category>Linux</category><category>zsh</category><category>scrapping</category><category>python</category><category>Linux</category></item></channel></rss>