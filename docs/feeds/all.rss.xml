<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Krystian Safjan's blog</title><link>https://safjan.com/</link><description>&lt;hr&gt;Data Scientist&lt;/br&gt;&lt;/br&gt;I blog about Machine Learning, Deep Learning and NLP&lt;hr&gt;</description><lastBuildDate>Fri, 23 Aug 2019 00:00:00 +0200</lastBuildDate><item><title>Data Science Command line Tools</title><link>https://safjan.com/data-science-command-line-tools/</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Fri, 23 Aug 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:safjan.com,2019-08-23:/data-science-command-line-tools/</guid><category>machine learning</category><category>linux</category></item><item><title>Finding the spy - post on Markov Chains and stochastic matrices</title><link>https://safjan.com/spy-catch/</link><description>&lt;p&gt;Using puzzle on tracing the high profile spy as excuse to showcase Markov Chains and demonstrate usage and properties e.g. Stationary distribution&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 10 Aug 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:safjan.com,2019-08-10:/spy-catch/</guid><category>python</category><category>jupyter</category><category>statistics</category><category>markow chains</category></item><item><title>Top CLI tools that improve work in console in 2019</title><link>https://safjan.com/top-cli-tools-that-improve-work-in-console-in-2019/</link><description>&lt;p&gt;On Github project &lt;a href="https://github.com/unixorn/awesome-zsh-plugins"&gt;Awesome Zsh plugins&lt;/a&gt; you can find 1700+ links to plugins, themes and Zsh plugin managers/frameworks. The number of tools listed on that page is high and it is difficult to get orientation which plugins gained already good reputation from Zsh users community. This post aims at identifying most popular tools where popularity is measured with the number of stars that Github users added to given plugin or tool.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sun, 14 Jul 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:safjan.com,2019-07-14:/top-cli-tools-that-improve-work-in-console-in-2019/</guid><category>zsh</category><category>scrapping</category><category>python</category></item><item><title>Learn Bayesian methods in 4 steps - by reading and by doing</title><link>https://safjan.com/learn-bayesian-methods-in-4-steps-by-reading-and-by-doing/</link><description>&lt;p&gt;This post propose 4-steps path for learning Byesian methods. First step is goint through the book: "Bayesian methods for hackers", second, use complementary books for probability and statistics, third, read How to become a Bayesian in eight easy steps: An annotated reading list", and last, go throught the book full of exercises: "Think Bayes".&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Tue, 09 Jul 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:safjan.com,2019-07-09:/learn-bayesian-methods-in-4-steps-by-reading-and-by-doing/</guid><category>machine learning</category><category>statistics</category><category>probability</category></item><item><title>Kaggle evaluation metrics used for regression problems</title><link>https://safjan.com/kaggle-evaluation-metrics-used-for-regression-problems/</link><description>&lt;p&gt;This post describe evaluation metrics used in Kaggle competitions where problem to solve is has regression nature. Eight different metrics are described, namely: Absolute Error (AE), Mean Absolute Error (MAE), Weighted Mean Absolute Error (WMAE), Pearson Correlation Coefficient, Spearmanâ€™s Rank Correlation, Root Mean Squared Error (RMSE), Root Mean Squared Logarithmic Error (RMSLE), Mean Columnwise Root Mean Squared Error (MCRMSE).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 16 Feb 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:safjan.com,2019-02-16:/kaggle-evaluation-metrics-used-for-regression-problems/</guid><category>machine learning</category><category>evaluation</category><category>metrics</category><category>performance</category></item><item><title>How to install TensorFlow and Keras on Windows 10</title><link>https://safjan.com/how-to-install-tensorflow-and-keras-on-windows-10/</link><description>&lt;p&gt;Guide on how to install TensorFlow cpu-only version - the case for machines without GPU supporting CUDA. Step-by-step procedure starting from creating conda environment till testing if TensorFlow and Keras Works.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 17 Jan 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:safjan.com,2019-01-17:/how-to-install-tensorflow-and-keras-on-windows-10/</guid><category>machine learning</category><category>tensorflow</category><category>howto</category></item><item><title>Darwin Approach to Traveling Salesman</title><link>https://safjan.com/darwin-approach-to-traveling-salesman/</link><description>&lt;p&gt;Can evolutionary approach crash the problem that brute forcing will last far more that the age of universe? This post shows how to attack Traveling Salesman Problem using Darwin approach. I'm describing evolution model and design decisions. See the animation how the population was evolving through the epochs.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 12 Jan 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:safjan.com,2019-01-12:/darwin-approach-to-traveling-salesman/</guid><category>machine learning</category><category>evolutionary</category></item><item><title>How to organize Data Science project based on Jupyter notebook</title><link>https://safjan.com/how-to-organize-data-science-project-based-on-jupyter-notebook/</link><description>&lt;p&gt;Having several notebook-based projects behind you might result in mess in projects directory. Organize your Data Science project based on Jupyter notebooks in a way that one can navigate through it. Especially that "the one" will be most probably you in few months time. To achieve that: keep your projects directory clean, name the project in a descriptive way and take care of internal structure of the project.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Sat, 05 Jan 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:safjan.com,2019-01-05:/how-to-organize-data-science-project-based-on-jupyter-notebook/</guid><category>jupyter</category><category>python</category><category>notebook</category><category>howto</category><category>machine learning</category></item><item><title>What's cooking</title><link>https://safjan.com/whats-cooking/</link><description>&lt;p&gt;Exploratory Data Anlysis of the Kaggle's "What's cooking" competition dataset to get understanding what kind of data we are dealing with and get intuition of existing dependecies.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 05 Apr 2018 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:safjan.com,2018-04-05:/whats-cooking/</guid><category>python</category><category>jupyter</category><category>kaggle</category><category>NLP</category><category>EDA</category><category>machine learning</category></item><item><title>Blockchain implementation</title><link>https://safjan.com/blockchain-implementation/</link><description>&lt;p&gt;Python implementation of blockchain in few lines of code.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Mon, 26 Mar 2018 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:safjan.com,2018-03-26:/blockchain-implementation/</guid><category>blockchain</category><category>cryptocurency</category><category>python</category><category>jupyter</category></item><item><title>Top popular Zsh plugins on Github</title><link>https://safjan.com/top-popular-zsh-plugins-on-github/</link><description>&lt;p&gt;There is an exhaustive but curated list of Zsh plugins posted on Github project &lt;a href="https://github.com/unixorn/awesome-zsh-plugins"&gt;Awesome Zsh plugins&lt;/a&gt;. You can find there 800+ links to plugins, themes and Zsh plugin managers/frameworks. Even though it is a collection of awesome stuff the number is a bit high get orientation which plugins gained already good reputation from Zsh users community. In this post I will identify most popular plugins - those which have highest number of stars.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Krystian Safjan</dc:creator><pubDate>Thu, 22 Mar 2018 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:safjan.com,2018-03-22:/top-popular-zsh-plugins-on-github/</guid><category>zsh</category><category>scrapping</category><category>python</category></item></channel></rss>